var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AccountSettingsComponent.html",[0,0.378,1,0.946]],["body/components/AccountSettingsComponent.html",[0,0.58,1,1.353,2,0.21,3,0.182,4,1.014,5,1.014,6,1.014,7,0.129,8,3.887,9,3.115,10,1.91,11,1.29,12,1.827,13,1.014,14,2.336,15,2.336,16,2.009,17,4.285,18,1.522,19,3.427,20,1.522,21,3.427,22,0.37,23,1.099,24,1.8,25,4.303,26,3.557,27,4.572,28,0.794,29,2.031,30,2.866,31,0.729,32,1.91,33,2.214,34,3.078,35,3.824,36,2.997,37,3.331,38,1.095,39,3.427,40,0.668,41,0.032,42,0.671,43,0.667,44,0.668,45,2.221,46,2.283,47,0.729,48,1.099,49,2.866,50,2.283,51,1.29,52,2.666,53,2.283,54,0.86,55,3.331,56,2.283,57,0.452,58,0.24,59,1.663,60,1.333,61,1.333,62,1.48,63,1.48,64,1.106,65,0.182,66,0.104,67,1.319,68,2.283,69,1.663,70,2.283,71,1.663,72,2.283,73,2.669,74,2.283,75,2.283,76,2.866,77,2.283,78,2.283,79,1.211,80,2.283,81,2.866,82,3.427,83,3.427,84,2.214,85,4.572,86,1.817,87,2.963,88,4.572,89,0.732,90,1.522,91,1.522,92,1.522,93,2.031,94,1.014,95,1.014,96,0.732,97,1.014,98,0.732,99,0.933,100,0.732,101,1.014,102,0.676,103,1.014,104,0.624,105,1.014,106,0.676,107,1.014,108,0.676,109,1.4,110,1.014,111,0.676,112,1.014,113,0.016,114,0.016]],["title/modules/AccountSettingsModule.html",[115,0.569,116,2.328]],["body/modules/AccountSettingsModule.html",[2,0.419,3,0.363,7,0.257,8,3.313,9,2.654,41,0.031,57,0.561,58,0.477,65,0.363,66,0.207,113,0.026,114,0.026,115,1.085,116,3.986,117,4.548,118,2.65,119,3.194,120,2.202,121,3.313,122,2.654]],["title/components/AppComponent.html",[0,0.378,96,1.025]],["body/components/AppComponent.html",[0,0.693,1,1.091,2,0.34,3,0.294,4,2.131,5,1.637,6,1.637,7,0.208,13,1.637,14,2.582,15,2.582,16,1.388,31,0.784,32,4.012,33,2.735,38,0.784,40,0.719,41,0.031,42,0.783,43,0.598,44,0.719,45,2.389,57,0.442,58,0.387,64,1.785,65,0.294,66,0.168,89,1.182,90,2.131,91,2.131,92,2.131,93,2.509,94,1.637,95,1.637,96,1.811,97,1.637,98,1.182,99,1.506,100,1.182,101,1.637,102,1.091,103,1.637,104,1.007,105,1.637,106,1.091,107,1.637,108,1.091,109,1.96,110,1.637,111,1.091,112,1.637,113,0.023,114,0.023,123,3.083,124,2.131,125,3.686,126,3.686]],["title/modules/AppModule.html",[115,0.569,127,2.071]],["body/modules/AppModule.html",[2,0.268,3,0.232,7,0.164,41,0.032,47,0.618,57,0.583,58,0.305,62,2.646,63,1.883,65,0.377,66,0.132,73,1.696,89,0.932,96,1.977,98,1.881,100,1.309,106,1.656,108,1.656,113,0.019,114,0.019,115,0.961,118,1.977,121,2.117,122,2.755,127,4.078,128,1.54,129,3.059,130,3.059,131,2.43,132,2.43,133,2.43,134,2.43,135,3.266,136,2.646,137,1.54,138,1.696,139,2.117,140,4.083,141,3.415,142,1.407,143,4.721,144,4.083,145,3.415,146,2.117,147,2.43,148,2.117,149,2.905,150,2.43,151,2.43,152,1.883,153,2.43,154,4.083,155,2.905,156,4.083,157,3.439,158,2.117,159,4.083,160,2.117,161,2.43,162,2.43,163,2.43,164,4.083,165,2.905,166,2.43,167,3.415,168,2.905,169,1.883,170,2.43,171,1.407,172,2.43,173,1.009,174,2.905,175,2.905,176,2.905,177,2.905,178,2.117,179,2.905,180,2.905,181,2.905]],["title/modules/AppRoutingModule.html",[115,0.569,135,1.865]],["body/modules/AppRoutingModule.html",[0,0.692,2,0.309,3,0.268,7,0.189,41,0.032,57,0.56,58,0.352,65,0.406,66,0.152,100,1.444,106,1.333,108,1.333,113,0.021,114,0.021,115,0.597,118,2.181,119,1.956,120,1.623,135,2.629,137,1.777,150,2.803,151,2.803,152,2.172,153,2.803,182,3.352,183,2.442,184,2.26,185,2.919,186,1.369,187,3.281,188,3.352,189,3.281,190,3.352,191,1.956,192,4.35,193,2.803,194,3.352,195,4.258,196,2.442,197,2.803,198,3.352,199,4.504,200,3.352,201,3.352,202,3.352,203,3.352,204,3.352,205,3.352]],["title/guards/AuthGuard.html",[187,2.328,206,1.865]],["body/guards/AuthGuard.html",[2,0.33,3,0.286,7,0.203,11,1.35,22,0.581,23,1.15,24,1.792,28,1.091,31,1.002,38,1.002,40,0.919,41,0.032,42,0.692,43,0.764,44,0.919,47,1.002,52,3.052,57,0.535,58,0.376,64,1.736,65,0.286,66,0.163,113,0.022,114,0.022,124,1.593,186,1.465,187,3.432,195,4.228,206,2.093,207,3.585,208,2.481,209,3.992,210,2.093,211,3.585,212,2.998,213,4.673,214,4.4,215,4.673,216,3.585,217,3.94,218,3.409,219,3.94,220,1.286,221,2.093,222,2.998,223,2.998,224,2.998,225,1.736,226,4.4,227,2.998,228,2.998]],["title/injectables/AuthService.html",[208,1.306,220,0.873]],["body/injectables/AuthService.html",[2,0.205,3,0.177,7,0.126,22,0.36,23,1.076,24,1.786,28,0.777,31,0.861,38,1.228,40,0.654,41,0.032,42,0.493,43,0.731,44,0.654,47,1.259,48,1.632,51,0.836,54,0.836,57,0.469,58,0.233,65,0.177,66,0.101,67,1.874,113,0.016,114,0.016,124,0.986,171,1.075,173,1.768,196,3.708,208,1.371,218,1.439,220,1.104,221,1.296,225,1.075,229,1.857,230,4.508,231,4.508,232,4.508,233,3.355,234,4.508,235,3.77,236,3.355,237,2.806,238,4.045,239,3.788,240,4.045,241,3.355,242,3.355,243,1.857,244,2.22,245,2.946,246,2.22,247,2.22,248,3.355,249,2.22,250,2.22,251,4.048,252,2.22,253,3.355,254,2.22,255,2.22,256,2.22,257,2.22,258,2.22,259,2.22,260,2.22,261,2.22,262,2.22,263,1.296,264,1.617,265,3.77,266,3.284,267,1.296,268,1.779,269,1.296,270,1.296,271,3.77,272,1.617,273,1.439,274,1.439,275,2.22,276,2.22,277,3.355,278,3.355,279,2.22,280,2.22,281,2.22,282,2.22,283,2.22,284,2.22,285,4.045,286,2.22,287,3.355,288,2.22,289,2.22,290,2.22,291,2.946,292,2.946,293,3.284,294,3.77,295,3.355,296,2.806,297,5.09,298,4.045,299,4.045,300,3.383,301,4.045,302,5.09,303,2.22,304,2.22,305,2.22,306,2.22,307,2.22,308,2.22,309,3.383,310,2.22,311,2.22,312,2.22,313,2.22,314,2.22,315,2.22,316,1.439,317,2.22,318,1.857,319,2.22,320,2.22]],["title/components/ChangePasswordChallengeComponent.html",[0,0.378,98,1.025]],["body/components/ChangePasswordChallengeComponent.html",[0,0.592,1,0.71,2,0.221,3,0.191,4,1.065,5,1.065,6,1.065,7,0.136,11,1.338,12,1.881,13,1.065,14,2.364,15,2.364,16,0.903,18,1.579,20,1.579,22,0.389,23,1.139,24,1.824,28,0.823,29,2.08,31,0.756,36,2.589,37,3.412,38,1.064,40,0.468,41,0.031,42,0.622,43,0.759,44,0.468,47,0.51,48,0.769,51,0.903,54,0.903,55,3.412,57,0.432,58,0.252,59,2.589,60,1.399,65,0.191,66,0.109,67,0.769,69,1.747,71,1.747,79,2.483,84,1.721,89,0.769,90,1.579,91,1.579,92,1.579,93,2.08,94,1.065,95,1.065,96,0.769,97,1.065,98,1.502,99,2.215,100,2.098,101,1.065,102,0.71,103,1.065,104,0.655,105,1.065,106,0.71,107,1.065,108,0.71,109,1.452,110,1.065,111,0.71,112,1.065,113,0.017,114,0.017,142,1.161,169,3.395,173,1.934,321,4.381,322,2.005,323,3.554,324,3.554,325,3.554,326,4.381,327,4.684,328,4.684,329,2.005,330,4.381,331,3.554,332,2.397,333,2.397,334,4.684,335,2.397,336,1.553,337,2.397,338,2.397,339,2.005,340,2.397,341,2.397,342,2.397,343,2.397,344,2.397,345,2.397,346,4.684,347,3.917,348,2.074,349,4.684,350,4.684,351,3.554,352,3.554,353,3.554,354,3.554,355,2.074,356,3.554,357,3.554,358,3.554]],["title/components/DashboardComponent.html",[0,0.378,102,0.946]],["body/components/DashboardComponent.html",[0,0.569,1,0.646,2,0.201,3,0.174,4,0.97,5,0.97,6,0.97,7,0.123,11,1.247,12,1.778,13,0.97,14,2.31,15,2.31,16,0.822,18,1.471,20,1.471,22,0.649,23,1.062,24,1.868,28,0.767,29,1.985,31,0.705,33,2.164,34,1.756,38,1.076,40,0.426,41,0.032,42,0.588,43,0.725,44,0.426,45,2.594,47,1.076,48,1.062,51,1.683,54,0.822,57,0.466,58,0.229,64,1.057,65,0.174,66,0.099,67,1.062,73,2.609,79,1.756,86,2.369,89,0.7,90,1.471,91,1.471,92,1.471,93,1.985,94,0.97,95,0.97,96,0.7,97,0.97,98,0.7,99,0.892,100,0.7,101,0.97,102,1.323,103,0.97,104,0.596,105,0.97,106,0.646,107,0.97,108,0.646,109,1.353,110,0.97,111,0.646,112,0.97,113,0.016,114,0.016,120,1.057,157,3.256,158,1.59,173,0.758,245,3.256,359,1.826,360,3.738,361,3.313,362,3.313,363,4.003,364,4.003,365,4.003,366,4.003,367,2.183,368,2.183,369,2.413,370,2.183,371,2.183,372,4.469,373,2.183,374,2.183,375,3.313,376,3.313,377,3.313,378,3.313,379,3.313,380,5.058,381,3.313,382,3.313,383,3.313,384,3.313,385,3.313,386,3.313,387,4.469,388,4.469,389,3.313,390,3.313,391,3.313,392,1.778,393,3.313,394,2.183,395,2.183,396,1.274,397,1.157,398,2.77,399,2.183,400,2.183,401,2.183,402,2.183,403,2.183,404,2.183,405,2.183,406,3.313,407,2.183,408,1.826,409,2.183,410,2.183,411,2.183,412,2.183,413,2.183,414,2.183,415,2.183,416,1.59]],["title/injectables/DialogService.html",[220,0.873,417,2.071]],["body/injectables/DialogService.html",[0,0.389,2,0.303,3,0.263,7,0.186,22,0.533,24,1.864,28,1.031,31,0.947,38,1.073,40,0.983,41,0.031,42,0.74,43,0.817,44,0.983,47,1.149,51,1.675,54,1.675,57,0.41,58,0.345,65,0.263,66,0.15,67,1.426,79,2.359,113,0.021,114,0.021,124,1.462,142,1.594,220,1.376,225,1.594,272,3.933,326,4.215,330,4.515,355,2.942,417,2.883,418,2.752,419,4.449,420,4.449,421,3.29,422,5.399,423,5.04,424,5.399,425,3.29,426,4.449,427,4.449,428,5.399,429,3.29,430,3.721,431,4.449,432,3.721,433,4.449,434,3.082,435,5.399,436,5.64,437,3.29,438,3.29,439,2.752,440,4.449,441,5.04,442,3.29,443,3.29,444,3.29]],["title/interfaces/Doctor.html",[445,1.865,446,1.694]],["body/interfaces/Doctor.html",[0,0.489,2,0.273,3,0.236,7,0.167,11,1.114,12,1.837,14,1.209,15,1.209,18,1.314,20,1.314,22,0.48,23,1.326,29,1.314,31,0.63,41,0.031,43,0.837,57,0.381,58,0.311,65,0.33,66,0.135,84,1.433,86,1.569,87,1.917,104,0.808,113,0.02,114,0.02,142,1.433,173,1.028,191,1.727,316,4.089,348,1.727,355,2.783,392,1.314,434,3.25,445,2.414,446,2.737,447,1.917,448,4.089,449,4.089,450,4.089,451,2.475,452,3.459,453,3.459,454,2.475,455,2.475,456,2.475,457,2.475,458,2.475,459,2.475,460,2.475,461,2.475,462,2.475,463,2.475,464,2.475,465,2.475,466,2.475,467,2.475,468,2.475,469,2.475,470,2.475,471,2.475,472,2.475,473,2.156,474,2.156,475,2.156,476,2.156,477,2.156,478,2.156,479,2.156,480,2.156,481,2.156,482,2.156,483,2.156,484,2.156,485,2.156,486,2.156,487,1.917,488,2.156,489,2.156,490,2.156,491,1.917,492,2.156,493,2.156,494,2.156,495,2.156,496,1.917,497,2.156,498,2.156,499,2.156,500,2.156,501,2.156,502,3.013,503,2.156,504,2.156,505,2.156,506,2.156,507,2.156,508,2.156,509,2.156]],["title/components/DoctorComponent.html",[0,0.378,104,0.873]],["body/components/DoctorComponent.html",[0,0.566,1,0.639,2,0.199,3,0.172,4,0.959,5,0.959,6,0.959,7,0.122,11,1.237,12,1.767,13,0.959,14,2.303,15,2.303,16,0.813,18,1.46,20,1.46,22,0.35,23,1.054,28,0.761,29,1.974,31,0.846,34,1.742,38,1.148,40,0.641,41,0.031,42,0.792,43,0.721,44,0.641,47,0.846,48,1.275,51,1.237,54,1.237,57,0.303,58,0.227,65,0.262,66,0.098,84,1.046,86,1.145,87,1.4,89,0.693,90,1.46,91,1.46,92,1.46,93,1.974,94,0.959,95,0.959,96,0.693,97,0.959,98,0.693,99,0.883,100,0.693,101,0.959,102,0.639,103,0.959,104,1.214,105,0.959,106,0.639,107,0.959,108,0.639,109,1.343,110,0.959,111,0.639,112,0.959,113,0.016,114,0.016,142,1.046,173,1.141,191,1.261,316,3.885,348,1.261,355,1.261,392,0.959,434,2.931,445,1.261,446,2.861,447,1.4,448,3.885,449,3.81,450,3.81,451,3.326,452,3.717,453,3.717,454,1.807,455,2.748,456,2.748,457,3.717,458,3.717,459,2.748,460,1.807,461,3.717,462,1.807,463,3.717,464,1.807,465,1.807,466,1.807,467,1.807,468,2.748,469,1.807,470,1.807,471,2.748,472,1.807,473,1.574,474,1.574,475,1.574,476,1.574,477,1.574,478,1.574,479,1.574,480,1.574,481,1.574,482,1.574,483,1.574,484,1.574,485,1.574,486,1.574,487,1.4,488,1.574,489,1.574,490,1.574,491,1.4,492,1.574,493,1.574,494,1.574,495,1.574,496,1.4,497,1.574,498,1.574,499,1.574,500,1.574,501,1.574,502,2.394,503,1.574,504,1.574,505,1.574,506,1.574,507,1.574,508,1.574,509,1.574,510,3.286,511,3.286,512,3.286,513,2.16,514,2.16,515,2.16,516,2.16,517,2.16,518,2.16,519,2.16,520,3.286,521,2.16,522,2.394,523,3.286,524,3.286,525,3.286,526,3.286,527,3.286,528,3.286,529,3.286]],["title/guards/GuestGuard.html",[189,2.328,206,1.865]],["body/guards/GuestGuard.html",[2,0.33,3,0.286,7,0.203,11,1.35,22,0.581,23,1.15,24,1.792,28,1.091,31,1.002,38,1.002,40,0.919,41,0.032,42,0.692,43,0.764,44,0.919,47,1.002,52,3.052,57,0.535,58,0.376,64,1.736,65,0.286,66,0.163,113,0.022,114,0.022,124,1.593,186,1.465,189,3.432,195,4.228,206,2.093,208,2.481,209,3.992,210,2.093,212,2.998,213,4.673,214,4.4,215,4.673,217,3.94,218,3.409,219,3.94,220,1.286,221,2.093,222,2.998,223,2.998,224,2.998,225,1.736,226,4.4,227,2.998,530,3.585,531,3.585,532,3.585,533,3.585]],["title/injectables/HelperService.html",[33,1.548,220,0.873]],["body/injectables/HelperService.html",[2,0.299,3,0.259,7,0.183,22,0.525,24,2.013,26,2.098,28,1.02,31,0.937,33,2.131,34,2.333,35,4.486,38,1.194,40,0.975,41,0.032,42,0.734,43,0.713,44,0.975,47,1.231,48,1.411,51,1.657,54,1.219,57,0.494,58,0.34,61,1.89,62,2.098,63,2.098,65,0.259,66,0.147,67,1.038,113,0.021,114,0.021,124,1.439,220,1.365,225,1.568,355,2.918,396,1.89,397,1.717,416,2.359,491,2.852,534,2.708,535,5.364,536,5.364,537,4.401,538,4.401,539,3.239,540,3.239,541,3.239,542,3.239,543,4.401,544,3.239,545,3.239,546,4.401,547,3.239,548,4.401,549,2.359,550,3.642,551,5.609,552,3.239,553,3.239,554,3.239,555,3.239,556,4.401,557,3.239,558,4.401,559,4.401,560,3.239,561,3.239,562,3.239]],["title/injectables/HttpService.html",[220,0.873,563,2.328]],["body/injectables/HttpService.html",[2,0.287,3,0.249,7,0.176,22,0.505,23,1.373,24,1.57,28,0.992,31,0.912,38,1.042,40,0.955,41,0.032,42,0.629,43,0.694,44,0.835,47,1.123,51,1.172,54,1.172,57,0.55,58,0.327,61,1.817,65,0.249,66,0.142,67,1.774,113,0.027,114,0.02,124,1.383,157,3.843,158,2.267,173,1.488,192,2.267,208,2.336,210,1.817,218,3.173,220,1.337,221,1.817,225,1.507,263,1.817,264,2.267,265,3.582,267,1.817,268,1.65,269,1.817,270,1.817,292,2.267,293,2.267,296,2.603,369,3.568,396,1.817,397,1.65,439,3.582,563,3.12,564,2.603,565,4.412,566,4.283,567,4.283,568,5.532,569,5.276,570,3.113,571,3.113,572,4.283,573,3.113,574,3.12,575,4.283,576,4.283,577,3.113,578,3.113,579,3.113,580,3.113,581,3.113,582,4.283,583,3.113,584,3.113,585,3.113,586,2.603]],["title/components/LoginComponent.html",[0,0.378,106,0.946]],["body/components/LoginComponent.html",[0,0.53,1,0.554,2,0.173,3,0.15,4,0.832,5,0.832,6,0.832,7,0.106,11,1.108,12,1.615,13,0.832,14,2.215,15,2.215,16,1.108,18,1.308,20,1.308,22,0.304,23,0.944,24,1.698,25,3.976,28,0.682,29,1.83,30,2.462,31,0.626,34,2.874,36,2.144,37,3.002,38,1.012,40,0.574,41,0.032,42,0.605,43,0.726,44,0.574,47,0.626,48,0.944,49,2.462,51,0.705,52,3.081,54,0.705,55,3.002,57,0.5,58,0.197,59,1.365,60,1.093,61,1.093,64,0.907,65,0.15,66,0.085,67,1.436,69,1.365,71,2.144,73,2.405,76,1.567,79,1.561,89,0.601,90,1.308,91,1.308,92,1.308,93,1.83,94,0.832,95,0.832,96,0.601,97,0.832,98,0.944,99,1.203,100,1.436,101,0.832,102,0.554,103,0.832,104,0.512,105,0.832,106,1.22,107,0.832,108,0.554,109,1.203,110,0.832,111,0.554,112,0.832,113,0.014,114,0.014,137,0.993,169,1.214,170,1.567,171,1.761,173,1.022,184,1.615,186,0.765,196,3.002,197,2.462,208,2.032,209,3.222,251,1.567,263,1.093,264,1.365,266,2.649,267,1.093,268,0.993,269,1.093,270,1.093,271,1.567,272,1.365,273,1.214,274,1.214,291,1.365,292,2.144,294,1.567,329,1.567,339,2.462,347,1.567,392,0.832,417,3.222,430,1.567,432,1.567,587,1.567,588,2.944,589,2.944,590,4.121,591,4.121,592,4.121,593,2.944,594,1.873,595,1.873,596,1.873,597,1.873,598,3.636,599,1.873,600,1.873,601,2.144,602,2.944,603,2.944,604,2.944,605,1.873,606,3.041,607,1.873,608,1.873,609,1.873,610,1.873,611,2.944,612,1.873,613,1.873,614,1.873,615,1.873,616,1.873,617,1.873,618,1.873,619,1.873,620,1.873,621,3.636,622,1.873,623,1.873,624,4.121,625,1.873,626,1.873,627,3.636,628,4.121,629,1.873,630,3.636,631,1.873,632,2.944,633,2.462,634,2.462,635,1.873,636,1.873,637,1.873,638,1.873,639,1.873,640,1.873,641,1.873,642,1.873,643,1.873,644,2.944,645,1.873,646,2.944,647,1.873,648,1.873,649,1.873,650,1.873,651,1.873,652,1.873,653,1.873,654,1.873,655,2.944,656,2.944,657,2.944,658,2.944]],["title/modules/MaintenanceModule.html",[115,0.569,659,2.071]],["body/modules/MaintenanceModule.html",[2,0.393,3,0.341,7,0.241,41,0.031,57,0.564,58,0.448,65,0.42,66,0.194,89,1.367,113,0.025,114,0.025,115,0.937,118,2.548,119,3.071,120,2.065,122,3.071,128,2.261,129,2.764,130,2.764,136,3.409,137,2.261,138,2.489,148,3.107,522,3.107,659,4.038,660,3.567,661,3.567,662,3.638,663,4.265]],["title/modules/MaintenanceRoutingModule.html",[115,0.569,662,1.865]],["body/modules/MaintenanceRoutingModule.html",[2,0.425,3,0.368,7,0.26,41,0.031,57,0.544,58,0.484,65,0.44,66,0.21,113,0.026,114,0.026,115,0.82,118,2.67,183,3.355,184,2.621,185,3.572,186,1.882,191,2.688,662,3.218,664,4.606,665,3.852]],["title/components/PageNotFoundComponent.html",[0,0.378,108,0.946]],["body/components/PageNotFoundComponent.html",[0,0.656,1,0.925,2,0.288,3,0.25,4,1.389,5,1.389,6,1.389,7,0.177,11,1.617,12,2.18,13,1.389,14,2.505,15,2.505,16,1.177,18,1.908,20,1.908,22,0.507,28,0.995,29,2.348,31,0.914,38,1.045,40,0.61,41,0.031,42,0.721,43,0.507,44,0.61,47,0.914,48,1.377,57,0.396,58,0.328,65,0.25,66,0.142,67,1.002,89,1.002,90,1.908,91,1.908,92,1.908,93,2.348,94,1.389,95,1.389,96,1.002,97,1.389,98,1.002,99,1.277,100,1.002,101,1.389,102,0.925,103,1.389,104,0.854,105,1.389,106,0.925,107,1.389,108,1.564,109,2.44,110,1.389,111,0.925,112,1.389,113,0.02,114,0.02,120,1.514,152,3.425,666,4.42,667,2.614,668,4.296,669,4.296,670,4.296,671,5.285,672,3.126,673,5.725,674,3.126,675,3.126,676,3.126,677,3.126,678,3.126,679,4.296,680,3.593,681,3.126,682,4.42,683,4.296,684,4.296,685,3.126]],["title/components/PagesComponent.html",[0,0.378,111,0.946]],["body/components/PagesComponent.html",[0,0.635,1,0.846,2,0.264,3,0.228,4,1.27,5,1.27,6,1.27,7,0.162,11,1.52,12,2.079,13,1.27,14,2.46,15,2.46,16,1.076,18,1.793,20,1.793,22,0.464,23,1.294,24,1.5,28,0.935,29,2.259,31,0.859,34,2.951,38,1.082,40,0.558,41,0.032,42,0.687,43,0.464,44,0.558,47,0.859,48,1.294,57,0.469,58,0.3,64,1.385,65,0.228,66,0.13,67,1.294,81,3.376,89,0.917,90,1.793,91,1.793,92,1.793,93,2.259,94,1.27,95,1.27,96,0.917,97,1.27,98,0.917,99,1.168,100,0.917,101,1.27,102,0.846,103,1.27,104,0.781,105,1.27,106,0.846,107,1.27,108,0.846,109,2.077,110,1.27,111,1.505,112,1.27,113,0.019,114,0.019,184,2.472,186,1.168,208,2.274,209,3.707,210,1.669,228,2.391,235,4.655,680,3.376,686,2.391,687,4.037,688,4.037,689,4.037,690,2.859,691,2.859,692,2.391,693,2.859,694,2.859,695,4.037,696,4.037,697,4.037,698,4.037,699,4.037]],["title/modules/PagesModule.html",[115,0.569,700,2.071]],["body/modules/PagesModule.html",[1,1.726,2,0.307,3,0.266,7,0.188,9,1.943,16,1.253,41,0.032,57,0.581,58,0.349,65,0.358,66,0.151,89,1.067,102,1.726,104,1.593,109,1.36,111,1.726,113,0.021,114,0.021,115,1.009,118,2.171,119,1.943,120,1.612,121,2.425,122,2.959,128,1.765,129,2.157,130,2.157,136,2.905,137,1.765,138,1.943,141,2.784,142,1.612,148,2.425,185,2.157,186,1.36,700,4.135,701,2.784,702,2.784,703,2.784,704,3.404,705,3.328,706,2.784,707,2.784,708,2.784,709,2.784,710,2.784,711,2.784,712,2.784,713,2.784,714,2.784,715,2.784,716,2.784,717,2.784,718,2.784,719,2.784,720,2.784,721,2.784,722,2.784,723,2.784,724,2.784,725,2.784,726,2.784,727,2.784,728,2.784,729,2.784,730,3.328,731,3.328]],["title/modules/PagesRoutingModule.html",[115,0.569,704,1.865]],["body/modules/PagesRoutingModule.html",[0,0.676,1,1.126,2,0.351,3,0.304,7,0.215,9,2.22,16,1.843,17,2.771,41,0.032,42,0.719,57,0.558,58,0.399,65,0.391,66,0.173,102,1.449,104,1.038,111,1.449,113,0.023,114,0.023,115,0.677,118,2.371,183,2.771,184,2.539,185,3.172,186,1.554,191,2.22,192,4.164,193,3.181,360,4.527,392,2.174,446,2.016,522,2.771,665,3.181,692,3.181,704,2.857,728,3.181,729,3.181,732,3.803,733,3.803,734,3.803,735,4.895,736,4.895,737,3.803,738,3.803]],["title/classes/PasswordValidator.html",[66,0.145,336,2.071]],["body/classes/PasswordValidator.html",[2,0.393,3,0.341,7,0.241,22,0.691,28,1.219,38,0.908,40,0.832,41,0.031,42,0.626,43,0.691,44,0.832,47,0.908,48,1.367,57,0.393,60,2.489,65,0.341,66,0.239,73,2.489,100,1.367,113,0.025,114,0.025,336,3.409,739,4.4,740,3.567,741,5.706,742,5.706,743,5.261,744,5.958,745,4.265,746,4.265,747,4.265,748,5.261,749,4.265,750,4.265,751,4.265]],["title/injectables/S3Service.html",[220,0.873,752,2.328]],["body/injectables/S3Service.html",[2,0.245,3,0.212,7,0.307,22,0.431,24,1.742,28,0.888,31,0.816,33,2.383,38,0.957,40,0.877,41,0.032,42,0.66,43,0.929,44,1.059,45,2.913,47,1.156,48,1.742,57,0.528,58,0.279,61,1.552,65,0.212,66,0.121,67,1.229,113,0.018,114,0.018,124,1.181,171,1.856,173,1.331,208,2.22,210,1.552,220,1.227,225,1.288,245,3.958,273,1.723,274,1.723,291,3.958,293,3.584,309,4.114,392,1.997,396,1.552,397,1.409,398,3.206,408,4.794,434,2.608,586,3.206,752,2.792,753,2.223,754,4.495,755,4.495,756,2.659,757,2.659,758,4.92,759,2.659,760,2.659,761,2.659,762,2.659,763,2.659,764,2.659,765,4.495,766,2.659,767,2.223,768,2.659,769,2.659,770,5.433,771,4.495,772,3.833,773,4.92,774,2.659,775,2.659,776,2.659,777,2.659,778,3.833,779,2.659,780,2.659,781,3.833,782,2.659,783,3.833,784,2.659,785,3.833,786,2.659,787,2.659,788,2.659,789,2.659,790,2.659]],["title/classes/User.html",[66,0.145,239,2.071]],["body/classes/User.html",[2,0.219,3,0.19,7,0.134,17,3.631,22,0.385,23,1.132,28,0.818,31,0.506,38,1.329,40,1.018,41,0.031,42,0.767,43,0.962,44,1.157,47,1.276,48,1.598,57,0.326,65,0.19,66,0.161,67,1.992,84,2.041,113,0.017,114,0.017,237,2.954,239,2.289,266,4.322,267,1.388,268,1.261,269,1.388,270,1.388,318,3.901,396,1.388,397,1.261,434,3.425,449,3.23,450,3.23,606,4.168,634,4.168,791,1.988,792,4.665,793,4.665,794,4.665,795,4.665,796,4.665,797,4.665,798,4.665,799,4.984,800,3.532,801,3.532,802,2.378,803,2.378,804,2.378,805,2.378,806,2.378,807,2.378,808,2.378,809,2.378,810,2.378,811,2.378,812,2.378,813,2.378,814,2.378,815,2.378,816,2.378,817,2.378,818,2.378,819,2.378,820,2.378,821,2.378,822,2.378,823,2.378,824,2.378,825,2.378,826,2.378,827,2.378,828,2.378,829,2.378,830,3.532,831,3.532,832,2.378,833,3.532,834,2.378,835,3.532,836,2.378,837,3.532,838,2.378,839,3.532,840,2.378,841,2.378,842,2.378,843,2.378,844,2.378,845,2.378,846,2.378,847,2.378]],["title/coverage.html",[848,3.647]],["body/coverage.html",[0,0.709,1,0.939,7,0.179,8,2.312,9,1.853,10,2.655,26,2.057,33,1.537,41,0.031,43,0.515,66,0.197,96,1.018,98,1.018,100,1.392,102,0.939,104,0.867,106,0.939,108,0.939,111,0.939,113,0.021,114,0.021,115,0.565,123,2.655,139,2.312,152,2.057,169,2.057,171,1.537,173,1.103,178,2.312,208,1.297,220,1.521,229,2.655,239,2.057,263,2.534,321,2.655,322,2.655,336,2.057,359,2.655,392,1.41,416,4.788,417,2.057,418,2.655,445,1.853,446,1.683,447,3.206,534,2.655,549,2.312,550,2.312,563,2.312,564,2.655,574,2.312,587,2.655,601,2.312,666,2.655,667,2.655,686,2.655,739,2.655,740,2.655,752,2.312,753,2.655,791,2.655,848,2.655,849,3.174,850,3.174,851,3.174,852,4.341,853,6.151,854,4.341,855,4.948,856,5.319,857,2.655,858,2.655,859,4.43,860,4.948,861,4.341,862,2.655,863,2.655,864,4.138,865,2.655,866,2.655,867,3.174,868,3.174]],["title/dependencies.html",[128,2.038,869,2.669]],["body/dependencies.html",[7,0.216,41,0.032,58,0.401,60,2.232,62,3.183,63,2.477,113,0.023,114,0.023,120,1.852,128,2.027,142,1.852,145,4.108,146,3.578,160,2.785,161,3.197,162,3.197,166,3.197,167,3.197,186,1.562,221,2.232,267,2.232,268,2.027,269,2.232,270,2.867,273,2.477,274,2.477,397,2.027,767,3.197,870,3.823,871,3.823,872,3.823,873,4.912,874,6.245,875,3.823,876,3.823,877,3.823,878,4.912,879,3.823,880,3.823,881,3.823,882,3.197,883,3.823,884,3.823,885,3.823,886,3.823,887,3.823,888,3.823,889,3.823,890,3.823,891,3.823,892,3.823,893,3.823,894,3.823,895,3.823,896,3.823,897,3.823,898,3.823,899,3.823,900,3.823,901,3.823,902,3.823,903,3.823]],["title/miscellaneous/functions.html",[171,1.861,904,1.729]],["body/miscellaneous/functions.html",[22,0.798,40,0.96,41,0.029,42,0.723,44,0.96,113,0.027,114,0.027,139,3.585,171,2.383,172,4.115,178,4.176,243,4.115,369,3.585,904,3.188,905,4.921]],["title/index.html",[22,0.433,906,2.669,907,2.669]],["body/index.html",[0,0.647,3,0.31,7,0.22,41,0.024,42,0.571,99,1.587,113,0.024,114,0.024,138,2.268,147,3.249,160,3.983,173,1.349,448,2.517,633,3.249,682,3.249,882,5.175,908,3.885,909,4.962,910,5.761,911,5.468,912,3.885,913,3.885,914,3.885,915,4.962,916,6.188,917,3.885,918,3.885,919,3.885,920,3.885,921,3.885,922,3.885,923,3.885,924,5.468,925,3.885,926,5.953,927,3.885,928,3.885,929,3.885,930,3.885,931,3.885,932,3.885,933,3.249,934,4.962,935,5.953,936,4.962,937,4.962,938,3.885,939,5.761,940,3.885,941,3.885,942,3.885,943,5.468,944,3.885,945,3.885]],["title/modules.html",[115,0.777]],["body/modules.html",[41,0.026,113,0.026,114,0.026,115,0.826,116,3.377,127,3.004,135,2.706,146,4.311,659,3.004,662,2.706,700,3.004,704,2.706,946,6.129,947,6.129,948,6.424,949,5.917,950,5.917]],["title/overview.html",[951,3.647]],["body/overview.html",[0,0.435,1,1.576,41,0.031,65,0.294,66,0.167,84,1.781,86,2.539,89,1.179,96,1.959,98,1.708,102,1.576,104,1.454,106,1.576,108,1.576,111,1.576,113,0.023,114,0.023,115,0.853,122,2.146,127,4.171,128,1.949,129,2.382,130,2.382,131,3.075,132,3.075,133,3.075,134,3.075,135,3.109,136,3.103,137,1.949,138,2.146,184,1.633,206,2.146,220,1.004,348,2.146,445,2.146,487,2.382,496,2.382,659,3.656,660,3.075,661,3.075,662,3.109,700,4.149,701,3.075,702,3.075,703,3.075,704,3.109,951,3.075,952,3.677]],["title/routes.html",[184,1.937]],["body/routes.html",[41,0.028,113,0.028,114,0.028,184,2.287]],["title/miscellaneous/variables.html",[859,2.8,904,1.729]],["body/miscellaneous/variables.html",[22,0.391,26,3.042,41,0.031,42,0.624,43,0.939,51,2.24,54,2.144,79,1.891,84,2.057,86,1.277,87,1.561,113,0.017,114,0.017,115,0.757,119,1.406,163,2.015,263,3.063,268,1.891,300,2.983,316,3.809,348,1.406,392,1.887,434,2.956,446,1.891,447,1.561,448,3.755,449,3.755,450,3.755,473,1.755,474,1.755,475,1.755,476,1.755,477,1.755,478,1.755,479,1.755,480,1.755,481,1.755,482,1.755,483,1.755,484,1.755,485,1.755,486,1.755,487,1.561,488,1.755,489,1.755,490,1.755,491,1.561,492,1.755,493,1.755,494,1.755,495,1.755,496,1.561,497,1.755,498,1.755,499,1.755,500,1.755,501,1.755,502,2.599,503,1.755,504,1.755,505,1.755,506,1.755,507,1.755,508,1.755,509,1.755,549,3.094,550,3.094,565,2.983,574,3.094,601,3.094,706,2.015,707,2.015,708,2.015,709,2.015,710,2.015,711,2.015,712,2.015,713,2.983,714,2.983,715,2.983,716,2.015,717,2.015,718,2.015,719,2.015,720,2.015,721,2.015,722,2.015,723,2.015,724,2.015,725,2.015,726,2.015,727,2.015,857,2.015,858,2.983,859,1.755,862,2.015,863,2.015,864,2.015,865,2.015,866,2.015,904,1.561,933,2.983,953,2.409,954,2.409,955,4.247,956,2.409,957,2.409,958,2.409,959,2.409,960,2.409,961,3.567,962,2.409,963,2.409,964,2.409,965,2.409,966,4.695,967,5.248,968,5.794,969,3.567,970,4.695,971,3.567,972,3.567,973,3.567,974,3.567,975,3.567,976,3.567,977,3.567,978,3.567,979,3.567,980,3.567,981,3.567,982,3.567,983,2.409,984,2.409,985,2.409,986,2.409,987,2.409,988,2.409,989,2.409,990,2.409,991,2.409]]],"invertedIndex":[["",{"_index":41,"title":{},"body":{"components/AccountSettingsComponent.html":{},"modules/AccountSettingsModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"injectables/DialogService.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"guards/GuestGuard.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"modules/MaintenanceModule.html":{},"modules/MaintenanceRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"classes/PasswordValidator.html":{},"injectables/S3Service.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":416,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/HelperService.html":{},"coverage.html":{}}}],["0.1.1",{"_index":889,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":853,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":852,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":856,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":861,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":854,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":855,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":860,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":84,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"classes/User.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.2",{"_index":388,"title":{},"body":{"components/DashboardComponent.html":{}}}],["1.3.8",{"_index":895,"title":{},"body":{"dependencies.html":{}}}],["1.6.0",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["1.amazonaws.com/ap",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10",{"_index":506,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["10.0.2",{"_index":886,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":80,"title":{},"body":{"components/AccountSettingsComponent.html":{}}}],["11",{"_index":952,"title":{},"body":{"overview.html":{}}}],["1102md000343",{"_index":473,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["1102md000769",{"_index":500,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["1102md000770",{"_index":504,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["1102md007435",{"_index":476,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["1102md007755",{"_index":488,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["1102md007800",{"_index":497,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["1102md033959",{"_index":492,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["1102md035779",{"_index":480,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["1102md035826",{"_index":507,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["1102md046564",{"_index":484,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["1:a4c61255",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1_skjjorizn",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":86,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.23",{"_index":888,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["2.306.0",{"_index":890,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":894,"title":{},"body":{"dependencies.html":{}}}],["2.7.2",{"_index":892,"title":{},"body":{"dependencies.html":{}}}],["2.8.0",{"_index":885,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":87,"title":{},"body":{"components/AccountSettingsComponent.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["3.0.1",{"_index":887,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":440,"title":{},"body":{"injectables/DialogService.html":{}}}],["3l6sa9p2ebk157dge2i4a32gri",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":483,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["4.17.10",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["400px",{"_index":650,"title":{},"body":{"components/LoginComponent.html":{}}}],["4096",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4be58aeb4f9a",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":487,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["6",{"_index":491,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"injectables/HelperService.html":{},"miscellaneous/variables.html":{}}}],["6.0.0",{"_index":878,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["6.1.5",{"_index":913,"title":{},"body":{"index.html":{}}}],["6.1.6",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["6.4.6",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":351,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{}}}],["600px",{"_index":431,"title":{},"body":{"injectables/DialogService.html":{}}}],["7",{"_index":496,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["796b",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":348,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["9",{"_index":503,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["_",{"_index":396,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"injectables/S3Service.html":{},"classes/User.html":{}}}],["_.assign",{"_index":583,"title":{},"body":{"injectables/HttpService.html":{}}}],["_.foreach(data.bpi",{"_index":407,"title":{},"body":{"components/DashboardComponent.html":{}}}],["_.kebabcase(file.nam",{"_index":784,"title":{},"body":{"injectables/S3Service.html":{}}}],["_.map(languag",{"_index":552,"title":{},"body":{"injectables/HelperService.html":{}}}],["_.toupper(initi",{"_index":847,"title":{},"body":{"classes/User.html":{}}}],["_chartdata:array",{"_index":414,"title":{},"body":{"components/DashboardComponent.html":{}}}],["_cognitous",{"_index":792,"title":{},"body":{"classes/User.html":{}}}],["_email",{"_index":793,"title":{},"body":{"classes/User.html":{}}}],["_first_nam",{"_index":794,"title":{},"body":{"classes/User.html":{}}}],["_last_nam",{"_index":795,"title":{},"body":{"classes/User.html":{}}}],["_phone_numb",{"_index":796,"title":{},"body":{"classes/User.html":{}}}],["_user",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["_usernam",{"_index":797,"title":{},"body":{"classes/User.html":{}}}],["_userpool",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["_whenloggedin",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["a20b",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abstractcontrol",{"_index":744,"title":{},"body":{"classes/PasswordValidator.html":{}}}],["ac",{"_index":746,"title":{},"body":{"classes/PasswordValidator.html":{}}}],["ac.get('confirmpassword').seterror",{"_index":751,"title":{},"body":{"classes/PasswordValidator.html":{}}}],["ac.get('confirmpassword').valu",{"_index":749,"title":{},"body":{"classes/PasswordValidator.html":{}}}],["ac.get('password').valu",{"_index":747,"title":{},"body":{"classes/PasswordValidator.html":{}}}],["accessor",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["account",{"_index":16,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["account_set",{"_index":81,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/PagesComponent.html":{}}}],["account_settings_gener",{"_index":82,"title":{},"body":{"components/AccountSettingsComponent.html":{}}}],["account_settings_oth",{"_index":83,"title":{},"body":{"components/AccountSettingsComponent.html":{}}}],["accountsettingscompon",{"_index":1,"title":{"components/AccountSettingsComponent.html":{}},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["accountsettingsmodul",{"_index":116,"title":{"modules/AccountSettingsModule.html":{}},"body":{"modules/AccountSettingsModule.html":{},"modules.html":{}}}],["action",{"_index":435,"title":{},"body":{"injectables/DialogService.html":{}}}],["activatedrout",{"_index":592,"title":{},"body":{"components/LoginComponent.html":{}}}],["activatedroutesnapshot",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GuestGuard.html":{}}}],["actual_compon",{"_index":112,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{}}}],["additionalhead",{"_index":569,"title":{},"body":{"injectables/HttpService.html":{}}}],["afterclos",{"_index":652,"title":{},"body":{"components/LoginComponent.html":{}}}],["again",{"_index":642,"title":{},"body":{"components/LoginComponent.html":{}}}],["alcantara",{"_index":475,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["alexand",{"_index":474,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["amazon",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"classes/User.html":{},"dependencies.html":{}}}],["ambass",{"_index":479,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["anastacio",{"_index":498,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["andal",{"_index":482,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["ang",{"_index":486,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["angular",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/anim",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":120,"title":{},"body":{"modules/AccountSettingsModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"modules/MaintenanceModule.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"components/DashboardComponent.html":{},"injectables/HttpService.html":{}}}],["angular/compil",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":58,"title":{},"body":{"components/AccountSettingsComponent.html":{},"modules/AccountSettingsModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"injectables/DialogService.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"guards/GuestGuard.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"modules/MaintenanceModule.html":{},"modules/MaintenanceRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"injectables/S3Service.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["angular/form",{"_index":60,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/LoginComponent.html":{},"classes/PasswordValidator.html":{},"dependencies.html":{}}}],["angular/http",{"_index":880,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"components/ChangePasswordChallengeComponent.html":{},"injectables/DialogService.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"modules/PagesModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":186,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/GuestGuard.html":{},"components/LoginComponent.html":{},"modules/MaintenanceRoutingModule.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"dependencies.html":{}}}],["angulartempl",{"_index":908,"title":{},"body":{"index.html":{}}}],["annalisa",{"_index":508,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["ap",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apellan",{"_index":490,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["apiendpoint",{"_index":565,"title":{},"body":{"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["apolinar",{"_index":495,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["app.compon",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["app/pages/pages.module#pagesmodul",{"_index":194,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["appcompon",{"_index":96,"title":{"components/AppComponent.html":{}},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applyfilt",{"_index":510,"title":{},"body":{"components/DoctorComponent.html":{}}}],["applyfilter(filtervalu",{"_index":468,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{}}}],["appmodul",{"_index":127,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodul",{"_index":135,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aquino",{"_index":499,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["arcala",{"_index":502,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["aromin",{"_index":509,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["array",{"_index":372,"title":{},"body":{"components/DashboardComponent.html":{}}}],["array(this.chartdata.length",{"_index":415,"title":{},"body":{"components/DashboardComponent.html":{}}}],["artifact",{"_index":927,"title":{},"body":{"index.html":{}}}],["auth/auth.servic",{"_index":764,"title":{},"body":{"injectables/S3Service.html":{}}}],["auth/chang",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guard/auth.guard",{"_index":188,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/guard/guest.guard",{"_index":190,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/login/login.compon",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["auth/pag",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["authenticationdetail",{"_index":598,"title":{},"body":{"components/LoginComponent.html":{}}}],["authguard",{"_index":187,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["authservic",{"_index":208,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/GuestGuard.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/PagesComponent.html":{},"injectables/S3Service.html":{},"coverage.html":{}}}],["autofocu",{"_index":432,"title":{},"body":{"injectables/DialogService.html":{},"components/LoginComponent.html":{}}}],["automat",{"_index":921,"title":{},"body":{"index.html":{}}}],["avail",{"_index":947,"title":{},"body":{"modules.html":{}}}],["aw",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/S3Service.html":{},"dependencies.html":{}}}],["await",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["back",{"_index":683,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["behaviorsubject",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(nul",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["beta.17",{"_index":879,"title":{},"body":{"dependencies.html":{}}}],["bitcoin",{"_index":378,"title":{},"body":{"components/DashboardComponent.html":{}}}],["blob([data.bodi",{"_index":776,"title":{},"body":{"injectables/S3Service.html":{}}}],["bodi",{"_index":787,"title":{},"body":{"injectables/S3Service.html":{}}}],["boolean",{"_index":52,"title":{},"body":{"components/AccountSettingsComponent.html":{},"guards/AuthGuard.html":{},"guards/GuestGuard.html":{},"components/LoginComponent.html":{}}}],["bootstrap",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/MaintenanceModule.html":{},"modules/PagesModule.html":{},"overview.html":{}}}],["break",{"_index":627,"title":{},"body":{"components/LoginComponent.html":{}}}],["brows",{"_index":948,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["bucket",{"_index":773,"title":{},"body":{"injectables/S3Service.html":{}}}],["bucket.getobject(param",{"_index":774,"title":{},"body":{"injectables/S3Service.html":{}}}],["bucket.upload(param",{"_index":790,"title":{},"body":{"injectables/S3Service.html":{}}}],["bucketnam",{"_index":770,"title":{},"body":{"injectables/S3Service.html":{}}}],["build",{"_index":926,"title":{},"body":{"index.html":{}}}],["cach",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["callback",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/S3Service.html":{}}}],["callback(err",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"injectables/S3Service.html":{}}}],["callback(nul",{"_index":778,"title":{},"body":{"injectables/S3Service.html":{}}}],["callback(tru",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["canactiv",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/GuestGuard.html":{}}}],["canactivate(next",{"_index":212,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GuestGuard.html":{}}}],["case",{"_index":624,"title":{},"body":{"components/LoginComponent.html":{}}}],["challeng",{"_index":323,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{}}}],["challenge'},{'nam",{"_index":101,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{}}}],["challenge.compon",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{}}}],["challenge.component.html",{"_index":325,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{}}}],["challenge.component.scss",{"_index":324,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{}}}],["challenge.component.t",{"_index":322,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{},"coverage.html":{}}}],["challenge.component.ts:13",{"_index":335,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{}}}],["challenge.component.ts:17",{"_index":331,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{}}}],["challenge.component.ts:21",{"_index":333,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{}}}],["challenge.component.ts:24",{"_index":332,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{}}}],["challenge/chang",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["chang",{"_index":99,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"index.html":{}}}],["changepasswordchallengecompon",{"_index":98,"title":{"components/ChangePasswordChallengeComponent.html":{}},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["charact",{"_index":349,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{}}}],["chart",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["chart.j",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["chartdata",{"_index":363,"title":{},"body":{"components/DashboardComponent.html":{}}}],["chartdata:array",{"_index":399,"title":{},"body":{"components/DashboardComponent.html":{}}}],["chartlabel",{"_index":364,"title":{},"body":{"components/DashboardComponent.html":{}}}],["chartlabels:array",{"_index":400,"title":{},"body":{"components/DashboardComponent.html":{}}}],["chartopt",{"_index":365,"title":{},"body":{"components/DashboardComponent.html":{}}}],["chartoptions:ani",{"_index":401,"title":{},"body":{"components/DashboardComponent.html":{}}}],["chartsmodul",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":633,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["checkawscredenti",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkawscredentials(callback",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["children",{"_index":734,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["class",{"_index":66,"title":{"classes/PasswordValidator.html":{},"classes/User.html":{}},"body":{"components/AccountSettingsComponent.html":{},"modules/AccountSettingsModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"injectables/DialogService.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"guards/GuestGuard.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"modules/MaintenanceModule.html":{},"modules/MaintenanceRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"classes/PasswordValidator.html":{},"injectables/S3Service.html":{},"classes/User.html":{},"coverage.html":{},"overview.html":{}}}],["clear",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["cli",{"_index":911,"title":{},"body":{"index.html":{}}}],["click",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["clickabl",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["clickableclickmodul",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["clientid",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["cluster_appmodul",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_maintenancemodul",{"_index":660,"title":{},"body":{"modules/MaintenanceModule.html":{},"overview.html":{}}}],["cluster_maintenancemodule_import",{"_index":661,"title":{},"body":{"modules/MaintenanceModule.html":{},"overview.html":{}}}],["cluster_pagesmodul",{"_index":701,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_pagesmodule_declar",{"_index":702,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_pagesmodule_import",{"_index":703,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["code",{"_index":448,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["cognito",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"classes/User.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["cognito_error_not_authorized_except",{"_index":601,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cognito_error_passwordreset_required_except",{"_index":602,"title":{},"body":{"components/LoginComponent.html":{}}}],["cognito_error_user_not_confirmed_except",{"_index":603,"title":{},"body":{"components/LoginComponent.html":{}}}],["cognito_error_user_not_found_except",{"_index":604,"title":{},"body":{"components/LoginComponent.html":{}}}],["cognitoappclientid",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cognitoidentitycredenti",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["cognitoidentitycredentials).clearcachedid",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["cognitoidentitycredentials).needsrefresh",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["cognitoidentitycredentials).refresh((err",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["cognitoidentitycredentials).refreshpromis",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["cognitoidentityendpoint",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cognitoidentitypoolid",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cognitoidentityserviceprovid",{"_index":599,"title":{},"body":{"components/LoginComponent.html":{}}}],["cognitous",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"classes/User.html":{}}}],["cognitouser.authenticateuser(authenticationdetail",{"_index":616,"title":{},"body":{"components/LoginComponent.html":{}}}],["cognitouser.completenewpasswordchallenge(password",{"_index":654,"title":{},"body":{"components/LoginComponent.html":{}}}],["cognitouser.getsession((err",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["cognitouser.getsession(async",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["cognitouser.refreshsession(session.getrefreshtoken",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["cognitouser.signout",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["cognitouserpool",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["cognitouserpoolid",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cognitousersess",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{}}}],["commonmodul",{"_index":119,"title":{},"body":{"modules/AccountSettingsModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaintenanceModule.html":{},"modules/PagesModule.html":{},"miscellaneous/variables.html":{}}}],["compon",{"_index":0,"title":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{}},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"injectables/DialogService.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"modules/PagesRoutingModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":94,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{}}}],["config",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DialogService.html":{},"components/LoginComponent.html":{}}}],["config.credenti",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["confirm",{"_index":334,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{}}}],["confirmpassword",{"_index":748,"title":{},"body":{"classes/PasswordValidator.html":{}}}],["console.log(cognitous",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(data",{"_index":403,"title":{},"body":{"components/DashboardComponent.html":{}}}],["console.log(dataarr",{"_index":411,"title":{},"body":{"components/DashboardComponent.html":{}}}],["console.log(err",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["console.log(row",{"_index":472,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{}}}],["const",{"_index":191,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"modules/MaintenanceRoutingModule.html":{},"modules/PagesRoutingModule.html":{}}}],["constructor",{"_index":31,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"injectables/DialogService.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"guards/GuestGuard.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"injectables/S3Service.html":{},"classes/User.html":{}}}],["constructor(authservic",{"_index":210,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GuestGuard.html":{},"injectables/HttpService.html":{},"components/PagesComponent.html":{},"injectables/S3Service.html":{}}}],["constructor(cognitous",{"_index":800,"title":{},"body":{"classes/User.html":{}}}],["constructor(dialog",{"_index":421,"title":{},"body":{"injectables/DialogService.html":{}}}],["constructor(fb",{"_index":329,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{},"components/LoginComponent.html":{}}}],["constructor(help",{"_index":32,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{}}}],["constructor(http",{"_index":367,"title":{},"body":{"components/DashboardComponent.html":{}}}],["constructor(loc",{"_index":672,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["constructor(maticonregistri",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["constructor(transl",{"_index":539,"title":{},"body":{"injectables/HelperService.html":{}}}],["contain",{"_index":352,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{}}}],["content",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contenttyp",{"_index":788,"title":{},"body":{"injectables/S3Service.html":{}}}],["core",{"_index":893,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":848,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cred",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["cruz",{"_index":698,"title":{},"body":{"components/PagesComponent.html":{}}}],["dashboard",{"_index":360,"title":{},"body":{"components/DashboardComponent.html":{},"modules/PagesRoutingModule.html":{}}}],["dashboard'},{'nam",{"_index":103,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{}}}],["dashboard.component.html",{"_index":362,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":361,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard/dashboard.compon",{"_index":729,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["dashboardcompon",{"_index":102,"title":{"components/DashboardComponent.html":{}},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":392,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"modules/PagesRoutingModule.html":{},"injectables/S3Service.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["data.contenttyp",{"_index":777,"title":{},"body":{"injectables/S3Service.html":{}}}],["dataarr",{"_index":406,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dataarr.push(valu",{"_index":409,"title":{},"body":{"components/DashboardComponent.html":{}}}],["datasourc",{"_index":458,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{}}}],["datetime_format_file_prefix_s3",{"_index":768,"title":{},"body":{"injectables/S3Service.html":{}}}],["declar",{"_index":122,"title":{},"body":{"modules/AccountSettingsModule.html":{},"modules/AppModule.html":{},"modules/MaintenanceModule.html":{},"modules/PagesModule.html":{},"overview.html":{}}}],["decor",{"_index":520,"title":{},"body":{"components/DoctorComponent.html":{}}}],["default",{"_index":54,"title":{},"body":{"components/AccountSettingsComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"injectables/DialogService.html":{},"components/DoctorComponent.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["default_languag",{"_index":550,"title":{},"body":{"injectables/HelperService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":38,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"injectables/DialogService.html":{},"components/DoctorComponent.html":{},"guards/GuestGuard.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"classes/PasswordValidator.html":{},"injectables/S3Service.html":{},"classes/User.html":{}}}],["dela",{"_index":697,"title":{},"body":{"components/PagesComponent.html":{}}}],["delet",{"_index":646,"title":{},"body":{"components/LoginComponent.html":{}}}],["dep",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["depend",{"_index":128,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/MaintenanceModule.html":{},"modules/PagesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":85,"title":{},"body":{"components/AccountSettingsComponent.html":{}}}],["detail",{"_index":529,"title":{},"body":{"components/DoctorComponent.html":{}}}],["dev",{"_index":918,"title":{},"body":{"index.html":{}}}],["develop",{"_index":914,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":426,"title":{},"body":{"injectables/DialogService.html":{}}}],["dialogref",{"_index":326,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{},"injectables/DialogService.html":{}}}],["dialogservic",{"_index":417,"title":{"injectables/DialogService.html":{}},"body":{"injectables/DialogService.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["direct",{"_index":92,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":925,"title":{},"body":{"index.html":{}}}],["directori",{"_index":930,"title":{},"body":{"index.html":{}}}],["disableclos",{"_index":651,"title":{},"body":{"components/LoginComponent.html":{}}}],["display",{"_index":376,"title":{},"body":{"components/DashboardComponent.html":{}}}],["displayedcolumn",{"_index":457,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{}}}],["dist",{"_index":929,"title":{},"body":{"index.html":{}}}],["doctor",{"_index":446,"title":{"interfaces/Doctor.html":{}},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"modules/PagesRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["doctor'},{'nam",{"_index":105,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{}}}],["doctor.component.html",{"_index":455,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{}}}],["doctor.component.scss",{"_index":456,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{}}}],["doctorcompon",{"_index":104,"title":{"components/DoctorComponent.html":{}},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["document",{"_index":849,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{}}}],["domsanit",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["download",{"_index":754,"title":{},"body":{"injectables/S3Service.html":{}}}],["download(undefin",{"_index":757,"title":{},"body":{"injectables/S3Service.html":{}}}],["durat",{"_index":436,"title":{},"body":{"injectables/DialogService.html":{}}}],["dynam",{"_index":881,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":940,"title":{},"body":{"index.html":{}}}],["element",{"_index":91,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{}}}],["element.cod",{"_index":524,"title":{},"body":{"components/DoctorComponent.html":{}}}],["element.first_nam",{"_index":526,"title":{},"body":{"components/DoctorComponent.html":{}}}],["element.id",{"_index":523,"title":{},"body":{"components/DoctorComponent.html":{}}}],["element.last_nam",{"_index":528,"title":{},"body":{"components/DoctorComponent.html":{}}}],["email",{"_index":634,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["email(email",{"_index":836,"title":{},"body":{"classes/User.html":{}}}],["en",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end",{"_index":939,"title":{},"body":{"index.html":{}}}],["english",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entrycompon",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["environ",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiendpoint",{"_index":572,"title":{},"body":{"injectables/HttpService.html":{}}}],["environment.cognitoappclientid",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.cognitoidentityendpoint",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.cognitoidentitypoolid",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.cognitouserpoolid",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.region",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["environments/environ",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{}}}],["err",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/S3Service.html":{}}}],["error",{"_index":639,"title":{},"body":{"components/LoginComponent.html":{}}}],["error_message_abov",{"_index":630,"title":{},"body":{"components/LoginComponent.html":{}}}],["esc",{"_index":15,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{}}}],["execut",{"_index":936,"title":{},"body":{"index.html":{}}}],["export",{"_index":65,"title":{},"body":{"components/AccountSettingsComponent.html":{},"modules/AccountSettingsModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"injectables/DialogService.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"guards/GuestGuard.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"modules/MaintenanceModule.html":{},"modules/MaintenanceRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"classes/PasswordValidator.html":{},"injectables/S3Service.html":{},"classes/User.html":{},"overview.html":{}}}],["extraprefix",{"_index":781,"title":{},"body":{"injectables/S3Service.html":{}}}],["fals",{"_index":79,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"injectables/DialogService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":36,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/LoginComponent.html":{}}}],["fil",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AccountSettingsComponent.html":{},"modules/AccountSettingsModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"injectables/DialogService.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"guards/GuestGuard.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"modules/MaintenanceModule.html":{},"modules/MaintenanceRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"classes/PasswordValidator.html":{},"injectables/S3Service.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["file.typ",{"_index":789,"title":{},"body":{"injectables/S3Service.html":{}}}],["filenam",{"_index":771,"title":{},"body":{"injectables/S3Service.html":{}}}],["filipino",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtervalu",{"_index":514,"title":{},"body":{"components/DoctorComponent.html":{}}}],["filtervalue.trim().tolowercas",{"_index":470,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{}}}],["first",{"_index":525,"title":{},"body":{"components/DoctorComponent.html":{}}}],["first_nam",{"_index":449,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["first_name(first_nam",{"_index":832,"title":{},"body":{"classes/User.html":{}}}],["flag",{"_index":932,"title":{},"body":{"index.html":{}}}],["flexlayoutmodul",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["footer",{"_index":699,"title":{},"body":{"components/PagesComponent.html":{}}}],["forgot",{"_index":200,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["forgot_password",{"_index":658,"title":{},"body":{"components/LoginComponent.html":{}}}],["forgotpasswordcompon",{"_index":201,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["formatcurr",{"_index":395,"title":{},"body":{"components/DashboardComponent.html":{}}}],["formatcurrency(tooltipitem.ylabel",{"_index":393,"title":{},"body":{"components/DashboardComponent.html":{}}}],["formatcurrency(valu",{"_index":386,"title":{},"body":{"components/DashboardComponent.html":{}}}],["formbuild",{"_index":37,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/LoginComponent.html":{}}}],["formgroup",{"_index":55,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/LoginComponent.html":{}}}],["formsmodul",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["found",{"_index":668,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found'},{'nam",{"_index":110,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{}}}],["found.compon",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.html",{"_index":670,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":669,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.t",{"_index":667,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:15",{"_index":676,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:18",{"_index":675,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:9",{"_index":674,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/pag",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["function",{"_index":171,"title":{"miscellaneous/functions.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/S3Service.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["function(tooltipitem",{"_index":391,"title":{},"body":{"components/DashboardComponent.html":{}}}],["further",{"_index":942,"title":{},"body":{"index.html":{}}}],["gener",{"_index":910,"title":{},"body":{"index.html":{}}}],["get",{"_index":906,"title":{"index.html":{}},"body":{}}],["get(path",{"_index":567,"title":{},"body":{"injectables/HttpService.html":{}}}],["getcognitous",{"_index":809,"title":{},"body":{"classes/User.html":{}}}],["getemail",{"_index":819,"title":{},"body":{"classes/User.html":{}}}],["getfirst_nam",{"_index":811,"title":{},"body":{"classes/User.html":{}}}],["getiniti",{"_index":798,"title":{},"body":{"classes/User.html":{}}}],["getlast_nam",{"_index":815,"title":{},"body":{"classes/User.html":{}}}],["getlocal",{"_index":535,"title":{},"body":{"injectables/HelperService.html":{}}}],["getphone_numb",{"_index":827,"title":{},"body":{"classes/User.html":{}}}],["getus",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["getusernam",{"_index":823,"title":{},"body":{"classes/User.html":{}}}],["getuserpool",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["getwhenloggedin",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["glenn",{"_index":481,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":121,"title":{},"body":{"modules/AccountSettingsModule.html":{},"modules/AppModule.html":{},"modules/PagesModule.html":{}}}],["go",{"_index":682,"title":{},"body":{"components/PageNotFoundComponent.html":{},"index.html":{}}}],["goback",{"_index":671,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["graph",{"_index":946,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":206,"title":{"guards/AuthGuard.html":{},"guards/GuestGuard.html":{}},"body":{"guards/AuthGuard.html":{},"guards/GuestGuard.html":{},"overview.html":{}}}],["guestguard",{"_index":189,"title":{"guards/GuestGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/GuestGuard.html":{}}}],["hammerj",{"_index":896,"title":{},"body":{"dependencies.html":{}}}],["header",{"_index":582,"title":{},"body":{"injectables/HttpService.html":{}}}],["help",{"_index":943,"title":{},"body":{"index.html":{}}}],["helper",{"_index":45,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"injectables/S3Service.html":{}}}],["helper.initlocal",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["helper/helper.servic",{"_index":769,"title":{},"body":{"injectables/S3Service.html":{}}}],["helperservic",{"_index":33,"title":{"injectables/HelperService.html":{}},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"injectables/HelperService.html":{},"injectables/S3Service.html":{},"coverage.html":{}}}],["here",{"_index":680,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{}}}],["home",{"_index":684,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["html",{"_index":90,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{}}}],["http",{"_index":369,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/HttpService.html":{},"miscellaneous/functions.html":{}}}],["http://localhost:3000",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":920,"title":{},"body":{"index.html":{}}}],["http_header_author",{"_index":576,"title":{},"body":{"injectables/HttpService.html":{}}}],["http_header_content_typ",{"_index":574,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"components/DashboardComponent.html":{},"injectables/HttpService.html":{}}}],["httpclientmodul",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":573,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpheaders(head",{"_index":585,"title":{},"body":{"injectables/HttpService.html":{}}}],["httploaderfactori",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["httploaderfactory(http",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["httpparam",{"_index":568,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpservic",{"_index":563,"title":{"injectables/HttpService.html":{}},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["icon",{"_index":735,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["id",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["ident",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"classes/User.html":{},"dependencies.html":{}}}],["identifi",{"_index":850,"title":{},"body":{"coverage.html":{}}}],["identitypoolid",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["idp.ap",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(!cognitous",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(((config.credenti",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(_.indexof(lang",{"_index":557,"title":{},"body":{"injectables/HelperService.html":{}}}],["if(cognitous",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(err",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/S3Service.html":{}}}],["if(localstorage.getitem(key_storage_languag",{"_index":555,"title":{},"body":{"injectables/HelperService.html":{}}}],["if(params['usernam",{"_index":608,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(password",{"_index":750,"title":{},"body":{"classes/PasswordValidator.html":{}}}],["if(this.email",{"_index":843,"title":{},"body":{"classes/User.html":{}}}],["if(this.first_nam",{"_index":841,"title":{},"body":{"classes/User.html":{}}}],["if(this.phone_numb",{"_index":845,"title":{},"body":{"classes/User.html":{}}}],["implement",{"_index":11,"title":{},"body":{"components/AccountSettingsComponent.html":{},"guards/AuthGuard.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"guards/GuestGuard.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{}}}],["import",{"_index":57,"title":{},"body":{"components/AccountSettingsComponent.html":{},"modules/AccountSettingsModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"injectables/DialogService.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"guards/GuestGuard.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"modules/MaintenanceModule.html":{},"modules/MaintenanceRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"classes/PasswordValidator.html":{},"injectables/S3Service.html":{},"classes/User.html":{}}}],["incorrect",{"_index":358,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AccountSettingsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"injectables/DialogService.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"guards/GuestGuard.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"classes/PasswordValidator.html":{},"injectables/S3Service.html":{},"classes/User.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indonesia",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AccountSettingsComponent.html":{},"modules/AccountSettingsModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"injectables/DialogService.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"guards/GuestGuard.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"modules/MaintenanceModule.html":{},"modules/MaintenanceRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"classes/PasswordValidator.html":{},"injectables/S3Service.html":{},"classes/User.html":{}}}],["initawscredenti",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["initi",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["initlocal",{"_index":536,"title":{},"body":{"injectables/HelperService.html":{}}}],["inject",{"_index":220,"title":{"injectables/AuthService.html":{},"injectables/DialogService.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"injectables/S3Service.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DialogService.html":{},"guards/GuestGuard.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"injectables/S3Service.html":{},"coverage.html":{},"overview.html":{}}}],["instruct",{"_index":635,"title":{},"body":{"components/LoginComponent.html":{}}}],["interfac",{"_index":445,"title":{"interfaces/Doctor.html":{}},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["invalid",{"_index":357,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{}}}],["isloggedin",{"_index":226,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GuestGuard.html":{}}}],["ispasswordshown",{"_index":590,"title":{},"body":{"components/LoginComponent.html":{}}}],["issubmit",{"_index":25,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/LoginComponent.html":{}}}],["js",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"classes/User.html":{},"dependencies.html":{}}}],["juan",{"_index":696,"title":{},"body":{"components/PagesComponent.html":{}}}],["karma",{"_index":938,"title":{},"body":{"index.html":{}}}],["kebabfilenam",{"_index":783,"title":{},"body":{"injectables/S3Service.html":{}}}],["kerwin",{"_index":485,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":408,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/S3Service.html":{}}}],["key_storage_languag",{"_index":549,"title":{},"body":{"injectables/HelperService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":390,"title":{},"body":{"components/DashboardComponent.html":{}}}],["lang",{"_index":551,"title":{},"body":{"injectables/HelperService.html":{}}}],["languag",{"_index":26,"title":{},"body":{"components/AccountSettingsComponent.html":{},"injectables/HelperService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":527,"title":{},"body":{"components/DoctorComponent.html":{}}}],["last_nam",{"_index":450,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["last_name(last_nam",{"_index":834,"title":{},"body":{"classes/User.html":{}}}],["layout",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["lee",{"_index":478,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":89,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"modules/MaintenanceModule.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"overview.html":{}}}],["leonid",{"_index":501,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["liter",{"_index":758,"title":{},"body":{"injectables/S3Service.html":{}}}],["loadchildren",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PagesRoutingModule.html":{}}}],["loader",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["local",{"_index":548,"title":{},"body":{"injectables/HelperService.html":{}}}],["localstorage.getitem(key_storage_languag",{"_index":556,"title":{},"body":{"injectables/HelperService.html":{}}}],["localstorage.setitem(key_storage_languag",{"_index":559,"title":{},"body":{"injectables/HelperService.html":{}}}],["locat",{"_index":673,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["lodash",{"_index":397,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"injectables/S3Service.html":{},"classes/User.html":{},"dependencies.html":{}}}],["logging_in",{"_index":657,"title":{},"body":{"components/LoginComponent.html":{}}}],["login",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'nam",{"_index":107,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{}}}],["login.component.html",{"_index":589,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":588,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincompon",{"_index":106,"title":{"components/LoginComponent.html":{}},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":591,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"components/PagesComponent.html":{}}}],["long",{"_index":350,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{}}}],["lowercas",{"_index":353,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{}}}],["maintainaspectratio",{"_index":382,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mainten",{"_index":522,"title":{},"body":{"components/DoctorComponent.html":{},"modules/MaintenanceModule.html":{},"modules/PagesRoutingModule.html":{}}}],["maintenance/doctor",{"_index":737,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["maintenance/doctor/doctor.compon",{"_index":730,"title":{},"body":{"modules/PagesModule.html":{}}}],["maintenancemodul",{"_index":659,"title":{"modules/MaintenanceModule.html":{}},"body":{"modules/MaintenanceModule.html":{},"modules.html":{},"overview.html":{}}}],["maintenanceroutingmodul",{"_index":662,"title":{"modules/MaintenanceRoutingModule.html":{}},"body":{"modules/MaintenanceModule.html":{},"modules/MaintenanceRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["map",{"_index":223,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GuestGuard.html":{}}}],["margaret",{"_index":494,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["mari",{"_index":493,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["marit",{"_index":489,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["matautocompletemodul",{"_index":706,"title":{},"body":{"modules/PagesModule.html":{},"miscellaneous/variables.html":{}}}],["matbuttonmodul",{"_index":707,"title":{},"body":{"modules/PagesModule.html":{},"miscellaneous/variables.html":{}}}],["matcardmodul",{"_index":708,"title":{},"body":{"modules/PagesModule.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":114,"title":{},"body":{"components/AccountSettingsComponent.html":{},"modules/AccountSettingsModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"injectables/DialogService.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"guards/GuestGuard.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"modules/MaintenanceModule.html":{},"modules/MaintenanceRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"classes/PasswordValidator.html":{},"injectables/S3Service.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matcheckboxmodul",{"_index":709,"title":{},"body":{"modules/PagesModule.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodul",{"_index":710,"title":{},"body":{"modules/PagesModule.html":{},"miscellaneous/variables.html":{}}}],["matchpassword",{"_index":742,"title":{},"body":{"classes/PasswordValidator.html":{}}}],["matchpassword(ac",{"_index":743,"title":{},"body":{"classes/PasswordValidator.html":{}}}],["matdatepickermodul",{"_index":711,"title":{},"body":{"modules/PagesModule.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":422,"title":{},"body":{"injectables/DialogService.html":{}}}],["matdialogconfig",{"_index":428,"title":{},"body":{"injectables/DialogService.html":{}}}],["matdialogmodul",{"_index":712,"title":{},"body":{"modules/PagesModule.html":{},"miscellaneous/variables.html":{}}}],["matdialogref",{"_index":330,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{},"injectables/DialogService.html":{}}}],["matformfieldmodul",{"_index":713,"title":{},"body":{"modules/PagesModule.html":{},"miscellaneous/variables.html":{}}}],["math.random().tostring(36).substring(n",{"_index":562,"title":{},"body":{"injectables/HelperService.html":{}}}],["maticonmodul",{"_index":714,"title":{},"body":{"modules/PagesModule.html":{},"miscellaneous/variables.html":{}}}],["maticonregistri",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/PagesModule.html":{}}}],["maticonregistry.addsvgiconset(domsanitizer.bypasssecuritytrustresourceurl('./assets/mdi.svg",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodul",{"_index":715,"title":{},"body":{"modules/PagesModule.html":{},"miscellaneous/variables.html":{}}}],["matlistmodul",{"_index":716,"title":{},"body":{"modules/PagesModule.html":{},"miscellaneous/variables.html":{}}}],["matmenumodul",{"_index":717,"title":{},"body":{"modules/PagesModule.html":{},"miscellaneous/variables.html":{}}}],["matpagin",{"_index":452,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{}}}],["matpaginatormodul",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matprogressbarmodul",{"_index":718,"title":{},"body":{"modules/PagesModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressspinnermodul",{"_index":719,"title":{},"body":{"modules/PagesModule.html":{},"miscellaneous/variables.html":{}}}],["matselectmodul",{"_index":720,"title":{},"body":{"modules/PagesModule.html":{},"miscellaneous/variables.html":{}}}],["matsidenavmodul",{"_index":721,"title":{},"body":{"modules/PagesModule.html":{},"miscellaneous/variables.html":{}}}],["matslidetogglemodul",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matsnackbar",{"_index":424,"title":{},"body":{"injectables/DialogService.html":{}}}],["matsnackbarmodul",{"_index":722,"title":{},"body":{"modules/PagesModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbarref",{"_index":441,"title":{},"body":{"injectables/DialogService.html":{}}}],["matsort",{"_index":453,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{}}}],["matsortmodul",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matsteppermodul",{"_index":723,"title":{},"body":{"modules/PagesModule.html":{},"miscellaneous/variables.html":{}}}],["mattabledatasourc",{"_index":454,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{}}}],["mattabledatasource(data",{"_index":459,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{}}}],["mattablemodul",{"_index":727,"title":{},"body":{"modules/PagesModule.html":{},"miscellaneous/variables.html":{}}}],["mattabsmodul",{"_index":724,"title":{},"body":{"modules/PagesModule.html":{},"miscellaneous/variables.html":{}}}],["mattoolbarmodul",{"_index":725,"title":{},"body":{"modules/PagesModule.html":{},"miscellaneous/variables.html":{}}}],["mattooltipmodul",{"_index":726,"title":{},"body":{"modules/PagesModule.html":{},"miscellaneous/variables.html":{}}}],["messag",{"_index":438,"title":{},"body":{"injectables/DialogService.html":{}}}],["message_error_password_requir",{"_index":656,"title":{},"body":{"components/LoginComponent.html":{}}}],["message_error_username_requir",{"_index":655,"title":{},"body":{"components/LoginComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{}}}],["method",{"_index":28,"title":{},"body":{"components/AccountSettingsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"injectables/DialogService.html":{},"components/DoctorComponent.html":{},"guards/GuestGuard.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"classes/PasswordValidator.html":{},"injectables/S3Service.html":{},"classes/User.html":{}}}],["mime_type_json",{"_index":575,"title":{},"body":{"injectables/HttpService.html":{}}}],["miscellan",{"_index":904,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["modul",{"_index":115,"title":{"modules/AccountSettingsModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaintenanceModule.html":{},"modules/MaintenanceRoutingModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules.html":{}},"body":{"modules/AccountSettingsModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaintenanceModule.html":{},"modules/MaintenanceRoutingModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules.t",{"_index":858,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["moment",{"_index":398,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/S3Service.html":{}}}],["moment().format(datetime_format_file_prefix_s3",{"_index":786,"title":{},"body":{"injectables/S3Service.html":{}}}],["more",{"_index":944,"title":{},"body":{"index.html":{}}}],["n",{"_index":545,"title":{},"body":{"injectables/HelperService.html":{}}}],["name",{"_index":42,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"injectables/DialogService.html":{},"components/DoctorComponent.html":{},"guards/GuestGuard.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"modules/PagesRoutingModule.html":{},"classes/PasswordValidator.html":{},"injectables/S3Service.html":{},"classes/User.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["navig",{"_index":919,"title":{},"body":{"index.html":{}}}],["neil",{"_index":477,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"injectables/S3Service.html":{},"coverage.html":{},"index.html":{}}}],["newpasswordrequir",{"_index":643,"title":{},"body":{"components/LoginComponent.html":{}}}],["next",{"_index":217,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GuestGuard.html":{}}}],["ng",{"_index":882,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ng2",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["ngmodul",{"_index":118,"title":{},"body":{"modules/AccountSettingsModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaintenanceModule.html":{},"modules/MaintenanceRoutingModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["ngoninit",{"_index":29,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{}}}],["ngselectmodul",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngx",{"_index":62,"title":{},"body":{"components/AccountSettingsComponent.html":{},"modules/AppModule.html":{},"injectables/HelperService.html":{},"dependencies.html":{}}}],["noauthguard",{"_index":199,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["notauthorizedexcept",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noth",{"_index":679,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["now",{"_index":785,"title":{},"body":{"injectables/S3Service.html":{}}}],["null",{"_index":339,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{},"components/LoginComponent.html":{}}}],["number",{"_index":355,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{},"injectables/DialogService.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"injectables/HelperService.html":{}}}],["object",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observ",{"_index":218,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/GuestGuard.html":{},"injectables/HttpService.html":{}}}],["occur",{"_index":640,"title":{},"body":{"components/LoginComponent.html":{}}}],["of(err",{"_index":578,"title":{},"body":{"injectables/HttpService.html":{}}}],["onfailur",{"_index":620,"title":{},"body":{"components/LoginComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{}}}],["onsubmit",{"_index":30,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/LoginComponent.html":{}}}],["onsubmit(valu",{"_index":49,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/LoginComponent.html":{}}}],["onsuccess",{"_index":617,"title":{},"body":{"components/LoginComponent.html":{}}}],["opendialog",{"_index":419,"title":{},"body":{"injectables/DialogService.html":{}}}],["opendialog(compon",{"_index":427,"title":{},"body":{"injectables/DialogService.html":{}}}],["opensnackbar",{"_index":420,"title":{},"body":{"injectables/DialogService.html":{}}}],["opensnackbar(messag",{"_index":433,"title":{},"body":{"injectables/DialogService.html":{}}}],["option",{"_index":44,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"injectables/DialogService.html":{},"components/DoctorComponent.html":{},"guards/GuestGuard.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"classes/PasswordValidator.html":{},"injectables/S3Service.html":{},"classes/User.html":{},"miscellaneous/functions.html":{}}}],["other_rout",{"_index":733,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["out",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/MaintenanceModule.html":{},"modules/PagesModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":951,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":869,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":109,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{}}}],["pagenotfoundcompon",{"_index":108,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pages.compon",{"_index":728,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["pages.component.html",{"_index":688,"title":{},"body":{"components/PagesComponent.html":{}}}],["pages.component.scss",{"_index":687,"title":{},"body":{"components/PagesComponent.html":{}}}],["pages.rout",{"_index":692,"title":{},"body":{"components/PagesComponent.html":{},"modules/PagesRoutingModule.html":{}}}],["pagescompon",{"_index":111,"title":{"components/PagesComponent.html":{}},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["pagesmodul",{"_index":700,"title":{"modules/PagesModule.html":{}},"body":{"modules/PagesModule.html":{},"modules.html":{},"overview.html":{}}}],["pagesroutingmodul",{"_index":704,"title":{"modules/PagesRoutingModule.html":{}},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["pagin",{"_index":461,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{}}}],["param",{"_index":586,"title":{},"body":{"injectables/HttpService.html":{},"injectables/S3Service.html":{}}}],["paramet",{"_index":40,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"injectables/DialogService.html":{},"components/DoctorComponent.html":{},"guards/GuestGuard.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"classes/PasswordValidator.html":{},"injectables/S3Service.html":{},"classes/User.html":{},"miscellaneous/functions.html":{}}}],["password",{"_index":100,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"classes/PasswordValidator.html":{},"coverage.html":{}}}],["passwordvalid",{"_index":336,"title":{"classes/PasswordValidator.html":{}},"body":{"components/ChangePasswordChallengeComponent.html":{},"classes/PasswordValidator.html":{},"coverage.html":{}}}],["path",{"_index":192,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/HttpService.html":{},"modules/PagesRoutingModule.html":{}}}],["phone_numb",{"_index":799,"title":{},"body":{"classes/User.html":{}}}],["phone_number(phone_numb",{"_index":840,"title":{},"body":{"classes/User.html":{}}}],["pleas",{"_index":632,"title":{},"body":{"components/LoginComponent.html":{}}}],["pool",{"_index":613,"title":{},"body":{"components/LoginComponent.html":{}}}],["price",{"_index":379,"title":{},"body":{"components/DashboardComponent.html":{}}}],["privat",{"_index":67,"title":{},"body":{"components/AccountSettingsComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"injectables/DialogService.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"injectables/S3Service.html":{},"classes/User.html":{}}}],["prod",{"_index":931,"title":{},"body":{"index.html":{}}}],["product",{"_index":933,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":909,"title":{},"body":{"index.html":{}}}],["promis",{"_index":219,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GuestGuard.html":{}}}],["properti",{"_index":23,"title":{},"body":{"components/AccountSettingsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"guards/GuestGuard.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/PagesComponent.html":{},"classes/User.html":{}}}],["protractor",{"_index":941,"title":{},"body":{"index.html":{}}}],["provid",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/MaintenanceModule.html":{},"modules/PagesModule.html":{},"overview.html":{}}}],["providedin",{"_index":225,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DialogService.html":{},"guards/GuestGuard.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"injectables/S3Service.html":{}}}],["public",{"_index":24,"title":{},"body":{"components/AccountSettingsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"injectables/DialogService.html":{},"guards/GuestGuard.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/PagesComponent.html":{},"injectables/S3Service.html":{}}}],["random",{"_index":366,"title":{},"body":{"components/DashboardComponent.html":{}}}],["randomize():void",{"_index":413,"title":{},"body":{"components/DashboardComponent.html":{}}}],["randomstr",{"_index":537,"title":{},"body":{"injectables/HelperService.html":{}}}],["randomstring(n",{"_index":543,"title":{},"body":{"injectables/HelperService.html":{}}}],["re",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["reactiveformsmodul",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readm",{"_index":945,"title":{},"body":{"index.html":{}}}],["region",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["regist",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{}}}],["registercompon",{"_index":198,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reload",{"_index":922,"title":{},"body":{"index.html":{}}}],["replaysubject",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["requir",{"_index":347,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{},"components/LoginComponent.html":{}}}],["requiredattribut",{"_index":645,"title":{},"body":{"components/LoginComponent.html":{}}}],["reset",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"modules/MaintenanceModule.html":{},"modules/PagesModule.html":{},"overview.html":{}}}],["resetpasswordcompon",{"_index":202,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["respons",{"_index":381,"title":{},"body":{"components/DashboardComponent.html":{}}}],["result",{"_index":113,"title":{},"body":{"components/AccountSettingsComponent.html":{},"modules/AccountSettingsModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"injectables/DialogService.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"guards/GuestGuard.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"modules/MaintenanceModule.html":{},"modules/MaintenanceRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"classes/PasswordValidator.html":{},"injectables/S3Service.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":47,"title":{},"body":{"components/AccountSettingsComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"injectables/DialogService.html":{},"components/DoctorComponent.html":{},"guards/GuestGuard.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"classes/PasswordValidator.html":{},"injectables/S3Service.html":{},"classes/User.html":{}}}],["root",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DialogService.html":{},"guards/GuestGuard.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"injectables/S3Service.html":{}}}],["root'},{'nam",{"_index":97,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{}}}],["rosemari",{"_index":505,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"miscellaneous/variables.html":{}}}],["rout",{"_index":184,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"modules/MaintenanceRoutingModule.html":{},"components/PagesComponent.html":{},"modules/PagesRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["route.data?.nam",{"_index":695,"title":{},"body":{"components/PagesComponent.html":{}}}],["router",{"_index":209,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GuestGuard.html":{},"components/LoginComponent.html":{},"components/PagesComponent.html":{}}}],["routermodul",{"_index":185,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MaintenanceRoutingModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["routermodule.forchild(rout",{"_index":665,"title":{},"body":{"modules/MaintenanceRoutingModule.html":{},"modules/PagesRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":205,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":215,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GuestGuard.html":{}}}],["routing.modul",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"modules/MaintenanceModule.html":{},"modules/PagesModule.html":{}}}],["routing.module.t",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MaintenanceRoutingModule.html":{},"modules/PagesRoutingModule.html":{}}}],["row",{"_index":517,"title":{},"body":{"components/DoctorComponent.html":{}}}],["run",{"_index":916,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":221,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/GuestGuard.html":{},"injectables/HttpService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":224,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GuestGuard.html":{}}}],["s3",{"_index":765,"title":{},"body":{"injectables/S3Service.html":{}}}],["s3.managedupload.manageduploadopt",{"_index":779,"title":{},"body":{"injectables/S3Service.html":{}}}],["s3key",{"_index":780,"title":{},"body":{"injectables/S3Service.html":{}}}],["s3servic",{"_index":752,"title":{"injectables/S3Service.html":{}},"body":{"injectables/S3Service.html":{},"coverage.html":{}}}],["sampleclick",{"_index":511,"title":{},"body":{"components/DoctorComponent.html":{}}}],["sampleclick(row",{"_index":471,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{}}}],["save",{"_index":88,"title":{},"body":{"components/AccountSettingsComponent.html":{}}}],["savea",{"_index":766,"title":{},"body":{"injectables/S3Service.html":{}}}],["saveas(new",{"_index":775,"title":{},"body":{"injectables/S3Service.html":{}}}],["saver",{"_index":767,"title":{},"body":{"injectables/S3Service.html":{},"dependencies.html":{}}}],["scaffold",{"_index":923,"title":{},"body":{"index.html":{}}}],["scale",{"_index":383,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sdk",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/S3Service.html":{},"dependencies.html":{}}}],["select",{"_index":884,"title":{},"body":{"dependencies.html":{}}}],["select/ng",{"_index":883,"title":{},"body":{"dependencies.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{}}}],["self",{"_index":615,"title":{},"body":{"components/LoginComponent.html":{}}}],["self.authservice.initawscredenti",{"_index":618,"title":{},"body":{"components/LoginComponent.html":{}}}],["self.dialogservice.opendialog(changepasswordchallengecompon",{"_index":649,"title":{},"body":{"components/LoginComponent.html":{}}}],["self.dialogservice.opensnackbar(\"an",{"_index":638,"title":{},"body":{"components/LoginComponent.html":{}}}],["self.dialogservice.opensnackbar(\"incorrect",{"_index":625,"title":{},"body":{"components/LoginComponent.html":{}}}],["self.dialogservice.opensnackbar(\"password",{"_index":631,"title":{},"body":{"components/LoginComponent.html":{}}}],["self.dialogservice.opensnackbar(\"pleas",{"_index":636,"title":{},"body":{"components/LoginComponent.html":{}}}],["self.issubmit",{"_index":621,"title":{},"body":{"components/LoginComponent.html":{}}}],["self.loginform.en",{"_index":622,"title":{},"body":{"components/LoginComponent.html":{}}}],["self.router.navig",{"_index":619,"title":{},"body":{"components/LoginComponent.html":{}}}],["send_reset_password_requir",{"_index":629,"title":{},"body":{"components/LoginComponent.html":{}}}],["serv",{"_index":917,"title":{},"body":{"index.html":{}}}],["server",{"_index":915,"title":{},"body":{"index.html":{}}}],["servic",{"_index":64,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"guards/GuestGuard.html":{},"components/LoginComponent.html":{},"components/PagesComponent.html":{}}}],["services/dialog/dialog.servic",{"_index":600,"title":{},"body":{"components/LoginComponent.html":{}}}],["session",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{}}}],["session.getidtoken().getjwttoken",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{}}}],["set",{"_index":17,"title":{},"body":{"components/AccountSettingsComponent.html":{},"modules/PagesRoutingModule.html":{},"classes/User.html":{}}}],["setemail(email",{"_index":821,"title":{},"body":{"classes/User.html":{}}}],["setfirst_name(first_nam",{"_index":813,"title":{},"body":{"classes/User.html":{}}}],["setlast_name(last_nam",{"_index":817,"title":{},"body":{"classes/User.html":{}}}],["setphone_number(phone_numb",{"_index":829,"title":{},"body":{"classes/User.html":{}}}],["settimeout",{"_index":77,"title":{},"body":{"components/AccountSettingsComponent.html":{}}}],["setting1",{"_index":72,"title":{},"body":{"components/AccountSettingsComponent.html":{}}}],["setting2",{"_index":74,"title":{},"body":{"components/AccountSettingsComponent.html":{}}}],["setting3",{"_index":75,"title":{},"body":{"components/AccountSettingsComponent.html":{}}}],["settings'},{'nam",{"_index":95,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{}}}],["settings.compon",{"_index":731,"title":{},"body":{"modules/PagesModule.html":{}}}],["settings.component.html",{"_index":21,"title":{},"body":{"components/AccountSettingsComponent.html":{}}}],["settings.component.scss",{"_index":19,"title":{},"body":{"components/AccountSettingsComponent.html":{}}}],["settings.component.t",{"_index":10,"title":{},"body":{"components/AccountSettingsComponent.html":{},"coverage.html":{}}}],["settings.component.ts:14",{"_index":56,"title":{},"body":{"components/AccountSettingsComponent.html":{}}}],["settings.component.ts:15",{"_index":53,"title":{},"body":{"components/AccountSettingsComponent.html":{}}}],["settings.component.ts:16",{"_index":39,"title":{},"body":{"components/AccountSettingsComponent.html":{}}}],["settings.component.ts:24",{"_index":46,"title":{},"body":{"components/AccountSettingsComponent.html":{}}}],["settings.component.ts:33",{"_index":50,"title":{},"body":{"components/AccountSettingsComponent.html":{}}}],["settings.module#accountsettingsmodul",{"_index":738,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["settings.module.t",{"_index":117,"title":{},"body":{"modules/AccountSettingsModule.html":{}}}],["settings/account",{"_index":9,"title":{},"body":{"components/AccountSettingsComponent.html":{},"modules/AccountSettingsModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"coverage.html":{}}}],["settingsform",{"_index":27,"title":{},"body":{"components/AccountSettingsComponent.html":{}}}],["setus",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["setuser(us",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["setusername(usernam",{"_index":825,"title":{},"body":{"classes/User.html":{}}}],["show",{"_index":327,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{}}}],["simplesnackbar",{"_index":442,"title":{},"body":{"injectables/DialogService.html":{}}}],["snackbar",{"_index":423,"title":{},"body":{"injectables/DialogService.html":{}}}],["sort",{"_index":463,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AccountSettingsComponent.html":{},"modules/AccountSettingsModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"injectables/DialogService.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"guards/GuestGuard.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"modules/MaintenanceModule.html":{},"modules/MaintenanceRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"classes/PasswordValidator.html":{},"injectables/S3Service.html":{},"classes/User.html":{},"index.html":{}}}],["southeast",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.t",{"_index":905,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../doctor.component.t",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../error.t",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../global",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.t",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../language.t",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":182,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:8",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth/chang",{"_index":321,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{},"coverage.html":{}}}],["src/app/auth/guard/auth.guard.t",{"_index":207,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/guard/auth.guard.ts:10",{"_index":211,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/guard/auth.guard.ts:17",{"_index":216,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/guard/guest.guard.t",{"_index":530,"title":{},"body":{"guards/GuestGuard.html":{}}}],["src/app/auth/guard/guest.guard.ts:10",{"_index":531,"title":{},"body":{"guards/GuestGuard.html":{}}}],["src/app/auth/guard/guest.guard.ts:17",{"_index":532,"title":{},"body":{"guards/GuestGuard.html":{}}}],["src/app/auth/login/login.component.t",{"_index":587,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:19",{"_index":596,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:20",{"_index":597,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:21",{"_index":593,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:31",{"_index":594,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:44",{"_index":595,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/pag",{"_index":666,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/glob",{"_index":857,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/model/user.t",{"_index":791,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/model/user.ts:10",{"_index":807,"title":{},"body":{"classes/User.html":{}}}],["src/app/model/user.ts:11",{"_index":806,"title":{},"body":{"classes/User.html":{}}}],["src/app/model/user.ts:13",{"_index":810,"title":{},"body":{"classes/User.html":{}}}],["src/app/model/user.ts:15",{"_index":812,"title":{},"body":{"classes/User.html":{}}}],["src/app/model/user.ts:16",{"_index":814,"title":{},"body":{"classes/User.html":{}}}],["src/app/model/user.ts:18",{"_index":816,"title":{},"body":{"classes/User.html":{}}}],["src/app/model/user.ts:19",{"_index":818,"title":{},"body":{"classes/User.html":{}}}],["src/app/model/user.ts:21",{"_index":820,"title":{},"body":{"classes/User.html":{}}}],["src/app/model/user.ts:22",{"_index":822,"title":{},"body":{"classes/User.html":{}}}],["src/app/model/user.ts:24",{"_index":824,"title":{},"body":{"classes/User.html":{}}}],["src/app/model/user.ts:25",{"_index":826,"title":{},"body":{"classes/User.html":{}}}],["src/app/model/user.ts:27",{"_index":828,"title":{},"body":{"classes/User.html":{}}}],["src/app/model/user.ts:28",{"_index":801,"title":{},"body":{"classes/User.html":{}}}],["src/app/model/user.ts:34",{"_index":808,"title":{},"body":{"classes/User.html":{}}}],["src/app/model/user.ts:6",{"_index":802,"title":{},"body":{"classes/User.html":{}}}],["src/app/model/user.ts:7",{"_index":804,"title":{},"body":{"classes/User.html":{}}}],["src/app/model/user.ts:8",{"_index":805,"title":{},"body":{"classes/User.html":{}}}],["src/app/model/user.ts:9",{"_index":803,"title":{},"body":{"classes/User.html":{}}}],["src/app/pages/account",{"_index":8,"title":{},"body":{"components/AccountSettingsComponent.html":{},"modules/AccountSettingsModule.html":{},"coverage.html":{}}}],["src/app/pages/dashboard/dashboard.component.t",{"_index":359,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts:15",{"_index":373,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts:16",{"_index":374,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts:17",{"_index":394,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts:44",{"_index":368,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts:51",{"_index":370,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts:73",{"_index":371,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/maintenance/doctor/doctor.component.t",{"_index":447,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/pages/maintenance/doctor/doctor.component.ts:11",{"_index":519,"title":{},"body":{"components/DoctorComponent.html":{}}}],["src/app/pages/maintenance/doctor/doctor.component.ts:12",{"_index":518,"title":{},"body":{"components/DoctorComponent.html":{}}}],["src/app/pages/maintenance/doctor/doctor.component.ts:14",{"_index":521,"title":{},"body":{"components/DoctorComponent.html":{}}}],["src/app/pages/maintenance/doctor/doctor.component.ts:15",{"_index":512,"title":{},"body":{"components/DoctorComponent.html":{}}}],["src/app/pages/maintenance/doctor/doctor.component.ts:19",{"_index":515,"title":{},"body":{"components/DoctorComponent.html":{}}}],["src/app/pages/maintenance/doctor/doctor.component.ts:24",{"_index":513,"title":{},"body":{"components/DoctorComponent.html":{}}}],["src/app/pages/maintenance/doctor/doctor.component.ts:28",{"_index":516,"title":{},"body":{"components/DoctorComponent.html":{}}}],["src/app/pages/maintenance/mainten",{"_index":664,"title":{},"body":{"modules/MaintenanceRoutingModule.html":{}}}],["src/app/pages/maintenance/maintenance.module.t",{"_index":663,"title":{},"body":{"modules/MaintenanceModule.html":{}}}],["src/app/pages/pag",{"_index":732,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["src/app/pages/pages.component.t",{"_index":686,"title":{},"body":{"components/PagesComponent.html":{},"coverage.html":{}}}],["src/app/pages/pages.component.ts:13",{"_index":689,"title":{},"body":{"components/PagesComponent.html":{}}}],["src/app/pages/pages.component.ts:20",{"_index":691,"title":{},"body":{"components/PagesComponent.html":{}}}],["src/app/pages/pages.component.ts:24",{"_index":690,"title":{},"body":{"components/PagesComponent.html":{}}}],["src/app/pages/pages.module.t",{"_index":705,"title":{},"body":{"modules/PagesModule.html":{}}}],["src/app/services/auth/auth.service.t",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth/auth.service.ts:116",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:13",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:14",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:15",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:17",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:18",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:19",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:30",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:36",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:67",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/dialog/dialog.service.t",{"_index":418,"title":{},"body":{"injectables/DialogService.html":{},"coverage.html":{}}}],["src/app/services/dialog/dialog.service.ts:14",{"_index":437,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/services/dialog/dialog.service.ts:20",{"_index":429,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/services/dialog/dialog.service.ts:7",{"_index":425,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/services/helper/helper.service.t",{"_index":534,"title":{},"body":{"injectables/HelperService.html":{},"coverage.html":{}}}],["src/app/services/helper/helper.service.ts:15",{"_index":542,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/services/helper/helper.service.ts:37",{"_index":541,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/services/helper/helper.service.ts:41",{"_index":547,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/services/helper/helper.service.ts:46",{"_index":544,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/services/helper/helper.service.ts:9",{"_index":540,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/services/http/http.service.t",{"_index":564,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["src/app/services/http/http.service.ts:16",{"_index":566,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http/http.service.ts:24",{"_index":570,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/s3/s3.service.t",{"_index":753,"title":{},"body":{"injectables/S3Service.html":{},"coverage.html":{}}}],["src/app/services/s3/s3.service.ts:13",{"_index":756,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/app/services/s3/s3.service.ts:20",{"_index":760,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/app/services/s3/s3.service.ts:43",{"_index":763,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/app/utils/constant/error.t",{"_index":862,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/constant/index.t",{"_index":863,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/constant/language.t",{"_index":864,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/password",{"_index":739,"title":{},"body":{"classes/PasswordValidator.html":{},"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":865,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":866,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":907,"title":{"index.html":{}},"body":{}}],["state",{"_index":214,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GuestGuard.html":{}}}],["statement",{"_index":851,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":741,"title":{},"body":{"classes/PasswordValidator.html":{}}}],["store",{"_index":928,"title":{},"body":{"index.html":{}}}],["string",{"_index":434,"title":{},"body":{"injectables/DialogService.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"injectables/S3Service.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["styleurl",{"_index":18,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{}}}],["subject",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["subscribe((password",{"_index":653,"title":{},"body":{"components/LoginComponent.html":{}}}],["support",{"_index":949,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":950,"title":{},"body":{"modules.html":{}}}],["switch(err.nam",{"_index":623,"title":{},"body":{"components/LoginComponent.html":{}}}],["symbol",{"_index":356,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{}}}],["t",{"_index":571,"title":{},"body":{"injectables/HttpService.html":{}}}],["tabl",{"_index":868,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":867,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":222,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GuestGuard.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{}}}],["test",{"_index":935,"title":{},"body":{"index.html":{}}}],["text",{"_index":377,"title":{},"body":{"components/DashboardComponent.html":{}}}],["there'",{"_index":678,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["there\\'",{"_index":685,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["this._cognitous",{"_index":830,"title":{},"body":{"classes/User.html":{}}}],["this._email",{"_index":835,"title":{},"body":{"classes/User.html":{}}}],["this._first_nam",{"_index":831,"title":{},"body":{"classes/User.html":{}}}],["this._last_nam",{"_index":833,"title":{},"body":{"classes/User.html":{}}}],["this._phone_numb",{"_index":839,"title":{},"body":{"classes/User.html":{}}}],["this._us",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._usernam",{"_index":837,"title":{},"body":{"classes/User.html":{}}}],["this._userpool",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._whenloggedin",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._whenloggedin.next(us",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiendpoint",{"_index":581,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.authservice.checkawscredenti",{"_index":772,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.authservice.logout",{"_index":694,"title":{},"body":{"components/PagesComponent.html":{}}}],["this.authservice.user.cognitouser.getsession((err",{"_index":577,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.authservice.userpool",{"_index":614,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.whenloggedin.getvalu",{"_index":227,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GuestGuard.html":{}}}],["this.chartdata",{"_index":404,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.chartdata.push",{"_index":412,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.chartlabel",{"_index":405,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.chartlabels.push(key",{"_index":410,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.datasource.filt",{"_index":469,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{}}}],["this.datasource.pagin",{"_index":464,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{}}}],["this.datasource.sort",{"_index":466,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{}}}],["this.dialog.open(compon",{"_index":444,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.email.substring(0",{"_index":844,"title":{},"body":{"classes/User.html":{}}}],["this.fb.group",{"_index":69,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/LoginComponent.html":{}}}],["this.first_name.substring(0",{"_index":842,"title":{},"body":{"classes/User.html":{}}}],["this.helper.randomstring(6",{"_index":782,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.helper.updatelocale(value.languag",{"_index":78,"title":{},"body":{"components/AccountSettingsComponent.html":{}}}],["this.http.get(\"https://api.coindesk.com/v1/bpi/historical/close.json\").subscribe((data",{"_index":402,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.http.get(url.tostr",{"_index":584,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.initawscredenti",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.issubmit",{"_index":76,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/LoginComponent.html":{}}}],["this.location.back",{"_index":677,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["this.loginform",{"_index":605,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls['username'].setvalue(params['usernam",{"_index":609,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.dis",{"_index":610,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.pagin",{"_index":465,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{}}}],["this.phone_number.substring(0",{"_index":846,"title":{},"body":{"classes/User.html":{}}}],["this.rout",{"_index":693,"title":{},"body":{"components/PagesComponent.html":{}}}],["this.route.queryparams.subscribe(param",{"_index":607,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navig",{"_index":533,"title":{},"body":{"guards/GuestGuard.html":{}}}],["this.router.navigate(['/login",{"_index":228,"title":{},"body":{"guards/AuthGuard.html":{},"components/PagesComponent.html":{}}}],["this.settingsform",{"_index":68,"title":{},"body":{"components/AccountSettingsComponent.html":{}}}],["this.setuser(new",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.setuser(nul",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.snackbar.open(messag",{"_index":443,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.sort",{"_index":467,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{}}}],["this.translate.addlangs(lang",{"_index":553,"title":{},"body":{"injectables/HelperService.html":{}}}],["this.translate.currentlang",{"_index":70,"title":{},"body":{"components/AccountSettingsComponent.html":{}}}],["this.translate.getbrowserlang",{"_index":558,"title":{},"body":{"injectables/HelperService.html":{}}}],["this.translate.setdefaultlang(default_languag",{"_index":554,"title":{},"body":{"injectables/HelperService.html":{}}}],["this.translate.use(lang",{"_index":560,"title":{},"body":{"injectables/HelperService.html":{}}}],["this.translate.use(local",{"_index":561,"title":{},"body":{"injectables/HelperService.html":{}}}],["this.updatepasswordform",{"_index":338,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{}}}],["this.userpool.getcurrentus",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["tick",{"_index":385,"title":{},"body":{"components/DashboardComponent.html":{}}}],["titl",{"_index":375,"title":{},"body":{"components/DashboardComponent.html":{}}}],["todo",{"_index":628,"title":{},"body":{"components/LoginComponent.html":{}}}],["tooltip",{"_index":389,"title":{},"body":{"components/DashboardComponent.html":{}}}],["translat",{"_index":34,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"injectables/HelperService.html":{},"components/LoginComponent.html":{},"components/PagesComponent.html":{}}}],["translate/cor",{"_index":63,"title":{},"body":{"components/AccountSettingsComponent.html":{},"modules/AppModule.html":{},"injectables/HelperService.html":{},"dependencies.html":{}}}],["translate/http",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttpload",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["translateload",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodul",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["translatemodule.forroot",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservic",{"_index":35,"title":{},"body":{"components/AccountSettingsComponent.html":{},"injectables/HelperService.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{}}}],["tri",{"_index":641,"title":{},"body":{"components/LoginComponent.html":{}}}],["true",{"_index":73,"title":{},"body":{"components/AccountSettingsComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"classes/PasswordValidator.html":{}}}],["type",{"_index":43,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"injectables/DialogService.html":{},"interfaces/Doctor.html":{},"components/DoctorComponent.html":{},"guards/GuestGuard.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"classes/PasswordValidator.html":{},"injectables/S3Service.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefin",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{}}}],["undefined,data",{"_index":759,"title":{},"body":{"injectables/S3Service.html":{}}}],["undefined,s3key",{"_index":762,"title":{},"body":{"injectables/S3Service.html":{}}}],["unit",{"_index":934,"title":{},"body":{"index.html":{}}}],["updat",{"_index":346,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{}}}],["updatelocal",{"_index":538,"title":{},"body":{"injectables/HelperService.html":{}}}],["updatelocale(local",{"_index":546,"title":{},"body":{"injectables/HelperService.html":{}}}],["updatepasswordform",{"_index":328,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{}}}],["upload",{"_index":755,"title":{},"body":{"injectables/S3Service.html":{}}}],["upload(undefin",{"_index":761,"title":{},"body":{"injectables/S3Service.html":{}}}],["uppercas",{"_index":354,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{}}}],["url",{"_index":579,"title":{},"body":{"injectables/HttpService.html":{}}}],["url(path",{"_index":580,"title":{},"body":{"injectables/HttpService.html":{}}}],["us",{"_index":924,"title":{},"body":{"index.html":{}}}],["usd",{"_index":380,"title":{},"body":{"components/DashboardComponent.html":{}}}],["usedefaultlang",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactori",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":239,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"coverage.html":{}}}],["user(cognitous",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["userattribut",{"_index":644,"title":{},"body":{"components/LoginComponent.html":{}}}],["userattributes.email_verifi",{"_index":648,"title":{},"body":{"components/LoginComponent.html":{}}}],["userattributes.phone_number_verifi",{"_index":647,"title":{},"body":{"components/LoginComponent.html":{}}}],["usernam",{"_index":606,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["username(usernam",{"_index":838,"title":{},"body":{"classes/User.html":{}}}],["username/password",{"_index":626,"title":{},"body":{"components/LoginComponent.html":{}}}],["userpool",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["userpoolid",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["utils/const",{"_index":61,"title":{},"body":{"components/AccountSettingsComponent.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"injectables/S3Service.html":{}}}],["utils/password",{"_index":337,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{}}}],["valid",{"_index":59,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/LoginComponent.html":{}}}],["validator.t",{"_index":740,"title":{},"body":{"classes/PasswordValidator.html":{},"coverage.html":{}}}],["validator.ts:5",{"_index":745,"title":{},"body":{"classes/PasswordValidator.html":{}}}],["validators.compos",{"_index":340,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{}}}],["validators.maxlength(60",{"_index":342,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{}}}],["validators.minlength(8",{"_index":341,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{}}}],["validators.pattern(/^(?=.*[a",{"_index":343,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{}}}],["validators.requir",{"_index":71,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/LoginComponent.html":{}}}],["valu",{"_index":51,"title":{},"body":{"components/AccountSettingsComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"injectables/DialogService.html":{},"components/DoctorComponent.html":{},"injectables/HelperService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["value.password",{"_index":612,"title":{},"body":{"components/LoginComponent.html":{}}}],["value.usernam",{"_index":611,"title":{},"body":{"components/LoginComponent.html":{}}}],["var",{"_index":93,"title":{},"body":{"components/AccountSettingsComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{}}}],["variabl",{"_index":859,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["verif",{"_index":637,"title":{},"body":{"components/LoginComponent.html":{}}}],["verifi",{"_index":203,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["verificationcompon",{"_index":204,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["version",{"_index":912,"title":{},"body":{"index.html":{}}}],["via",{"_index":937,"title":{},"body":{"index.html":{}}}],["view",{"_index":736,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["viewchild",{"_index":451,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{}}}],["viewchild(matpagin",{"_index":460,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{}}}],["viewchild(matsort",{"_index":462,"title":{},"body":{"interfaces/Doctor.html":{},"components/DoctorComponent.html":{}}}],["void",{"_index":48,"title":{},"body":{"components/AccountSettingsComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordChallengeComponent.html":{},"components/DashboardComponent.html":{},"components/DoctorComponent.html":{},"injectables/HelperService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PagesComponent.html":{},"classes/PasswordValidator.html":{},"injectables/S3Service.html":{},"classes/User.html":{}}}],["whenloggedin",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["width",{"_index":430,"title":{},"body":{"injectables/DialogService.html":{},"components/LoginComponent.html":{}}}],["window.navigator.languag",{"_index":387,"title":{},"body":{"components/DashboardComponent.html":{}}}],["x1f468;&#x1f3fd;‍&#x1f4bb",{"_index":681,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["yax",{"_index":384,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ye",{"_index":439,"title":{},"body":{"injectables/DialogService.html":{},"injectables/HttpService.html":{}}}],["z])(?=.*[a",{"_index":344,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{}}}],["z])(?=.*\\d",{"_index":345,"title":{},"body":{"components/ChangePasswordChallengeComponent.html":{}}}],["zone.j",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/MaintenanceModule.html":{},"modules/PagesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccountSettingsComponent.html":{"url":"components/AccountSettingsComponent.html","title":"component - AccountSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccountSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/account-settings/account-settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                esc-account-settings\n            \n\n            \n                styleUrls\n                account-settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./account-settings.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isSubmitting\n                            \n                            \n                                    Public\n                                languages\n                            \n                            \n                                    Public\n                                settingsForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(helper: HelperService, translate: TranslateService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/account-settings/account-settings.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        helper\n                                                  \n                                                        \n                                                                    HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/account-settings/account-settings.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit(value: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/account-settings/account-settings.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isSubmitting\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isSubmitting:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/account-settings/account-settings.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            languages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        languages:     \n\n                    \n                \n                    \n                        \n                            Default value : LANGUAGES\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/account-settings/account-settings.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settingsForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        settingsForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/account-settings/account-settings.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { LANGUAGES } from '../../utils/constant';\nimport { TranslateService } from '@ngx-translate/core';\nimport { HelperService } from '../../services';\n\n@Component({\n  selector: 'esc-account-settings',\n  templateUrl: './account-settings.component.html',\n  styleUrls: ['./account-settings.component.scss']\n})\nexport class AccountSettingsComponent implements OnInit {\n\n  public settingsForm : FormGroup;\n  public isSubmitting: boolean;\n  public languages = LANGUAGES;\n\n  constructor(\n    private helper: HelperService,\n    private translate: TranslateService,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.settingsForm = this.fb.group({\n      language: [this.translate.currentLang, Validators.required],\n      setting1: [true],\n      setting2: [true],\n      setting3: [true]\n    });\n  }\n\n  onSubmit(value){\n    this.isSubmitting = true;\n    setTimeout(() => {\n      this.helper.updateLocale(value.language);\n      this.isSubmitting = false;\n    } , 1000);\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ 'ACCOUNT_SETTINGS' | translate }}\n  \n  \n  \n\n    \n\n      {{ 'ACCOUNT_SETTINGS_GENERAL' | translate }}\n  \n      \n      \n\n      \n\n      {{ 'ACCOUNT_SETTINGS_OTHER' | translate }}\n\n      \n        \n          Setting 1\n          Setting 1 Description\n        \n        \n        \n      \n\n      \n        \n          Setting 2\n        \n        \n        \n      \n\n      \n        \n          Setting 3\n          Setting 3 Description\n        \n        \n        \n      \n      \n      {{ (isSubmitting ? 'SAVING' : 'SAVE') | translate }}\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'ACCOUNT_SETTINGS\\' | translate }}                {{ \\'ACCOUNT_SETTINGS_GENERAL\\' | translate }}                          {{ \\'ACCOUNT_SETTINGS_OTHER\\' | translate }}                        Setting 1          Setting 1 Description                                                      Setting 2                                                      Setting 3          Setting 3 Description                                          {{ (isSubmitting ? \\'SAVING\\' : \\'SAVE\\') | translate }}      '\n    var COMPONENTS = [{'name': 'AccountSettingsComponent', 'selector': 'esc-account-settings'},{'name': 'AppComponent', 'selector': 'esc-root'},{'name': 'ChangePasswordChallengeComponent', 'selector': 'esc-change-password-challenge'},{'name': 'DashboardComponent', 'selector': 'esc-dashboard'},{'name': 'DoctorComponent', 'selector': 'esc-doctor'},{'name': 'LoginComponent', 'selector': 'esc-login'},{'name': 'PageNotFoundComponent', 'selector': 'esc-page-not-found'},{'name': 'PagesComponent', 'selector': 'esc-pages'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccountSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountSettingsModule.html":{"url":"modules/AccountSettingsModule.html","title":"module - AccountSettingsModule","body":"\n                   \n\n\n\n\n  Modules\n  AccountSettingsModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/account-settings/account-settings.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MODULES } from '../../global-modules';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ...MODULES\n  ],\n  declarations: []\n})\nexport class AccountSettingsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                esc-root\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(helper: HelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        helper\n                                                  \n                                                        \n                                                                    HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { HelperService } from './services';\n\n@Component({\n  selector: 'esc-root',\n  template: ''\n})\nexport class AppComponent {\n\n  constructor(helper: HelperService) {\n    helper.initLocale();\n  }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccountSettingsComponent', 'selector': 'esc-account-settings'},{'name': 'AppComponent', 'selector': 'esc-root'},{'name': 'ChangePasswordChallengeComponent', 'selector': 'esc-change-password-challenge'},{'name': 'DashboardComponent', 'selector': 'esc-dashboard'},{'name': 'DoctorComponent', 'selector': 'esc-doctor'},{'name': 'LoginComponent', 'selector': 'esc-login'},{'name': 'PageNotFoundComponent', 'selector': 'esc-page-not-found'},{'name': 'PagesComponent', 'selector': 'esc-pages'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangePasswordChallengeComponent\n\nChangePasswordChallengeComponent\n\nAppModule -->\n\nChangePasswordChallengeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                ChangePasswordChallengeComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                PageNotFoundComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ChangePasswordChallengeComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material';\nimport { DomSanitizer, BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { PageNotFoundComponent } from './auth/page-not-found/page-not-found.component';\nimport { MODULES } from './global-modules';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { ClickableClickModule } from 'angular-clickable-click';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { ChangePasswordChallengeComponent } from './auth/change-password-challenge/change-password-challenge.component';\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http);\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    PageNotFoundComponent,\n    ChangePasswordChallengeComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    ClickableClickModule,\n    AppRoutingModule,\n    TranslateModule.forRoot({\n      useDefaultLang: true,\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),\n    ...MODULES\n  ],\n  entryComponents: [\n    ChangePasswordChallengeComponent\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer){\n    matIconRegistry.addSvgIconSet(domSanitizer.bypassSecurityTrustResourceUrl('./assets/mdi.svg'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './auth/login/login.component';\nimport { PageNotFoundComponent } from './auth/page-not-found/page-not-found.component';\nimport { AuthGuard } from './auth/guard/auth.guard';\nimport { GuestGuard } from './auth/guard/guest.guard';\n\n\nexport const routes: Routes = [\n\t{ \n\t\tpath: '',\n\t\tloadChildren: '../app/pages/pages.module#PagesModule',\n\t\tcanActivate: [ AuthGuard ]\n\t},\n\t{\n\t\tpath: 'login',\n\t\tcomponent: LoginComponent,\n\t\tcanActivate: [ GuestGuard ]\n\t},\n\t// {\n\t// \tpath: 'register',\n\t// \tcomponent: RegisterComponent,\n\t// \tcanActivate: [ NoAuthGuard ]\n\t// },\n\t// {\n\t// \tpath: 'forgot-password',\n\t// \tcomponent: ForgotPasswordComponent,\n\t// \tcanActivate: [ NoAuthGuard ]\n\t// },\n\t// {\n\t// \tpath: 'reset-password',\n\t// \tcomponent: ResetPasswordComponent,\n\t// \tcanActivate: [ ]\n\t// },\n\t// {\n\t// \tpath: 'verify',\n\t// \tcomponent: VerificationComponent,\n\t// \tcanActivate: [ ]\n\t// },\n\t{ \n\t\tpath: '**', \n\t\tcomponent: PageNotFoundComponent\n\t}\n];\n\n\n@NgModule({\n  imports: [\n  \tRouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/guard/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/guard/auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/guard/auth.guard.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { take, map } from 'rxjs/operators'\nimport { AuthService } from '../../services';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n\tconstructor(\n    public authService: AuthService, \n    public router: Router\n    ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n\n    let isLoggedIn = this.authService.whenLoggedIn.getValue();\n\n    if (!isLoggedIn){\n      this.router.navigate(['/login']);\n    }\n\n    return !!isLoggedIn;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _user\n                            \n                            \n                                    Private\n                                _userPool\n                            \n                            \n                                    Private\n                                _whenLoggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkAWSCredentials\n                            \n                            \n                                    Public\n                                initAWSCredentials\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Private\n                                setUser\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    whenLoggedIn\n                                \n                                \n                                    user\n                                \n                                \n                                    userPool\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/auth.service.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            checkAWSCredentials\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        checkAWSCredentials(callback: (undefined) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth/auth.service.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        callback\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initAWSCredentials\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initAWSCredentials()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth/auth.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth/auth.service.ts:116\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setUser(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth/auth.service.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _userPool\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _userPool:     CognitoUserPool\n\n                    \n                \n                    \n                        \n                            Type :     CognitoUserPool\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _whenLoggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _whenLoggedIn:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        whenLoggedIn\n                    \n                \n\n                \n                    \n                        getwhenLoggedIn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth/auth.service.ts:17\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n                \n                    \n                        getuser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth/auth.service.ts:18\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        userPool\n                    \n                \n\n                \n                    \n                        getuserPool()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth/auth.service.ts:19\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, ReplaySubject, Observable, Subject } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { CognitoUserPool, CognitoUserSession, CognitoUser } from 'amazon-cognito-identity-js';\nimport { CognitoIdentityCredentials, config } from 'aws-sdk';\nimport { User } from '../../model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private _whenLoggedIn = new BehaviorSubject(null);\n  private _userPool: CognitoUserPool;\n  private _user: User;\n\n  get whenLoggedIn(){ return this._whenLoggedIn };\n  get user(){ return this._user }\n  get userPool(){ return this._userPool }\n\n  constructor() {\n    this._userPool = new CognitoUserPool({\n      UserPoolId: environment.cognitoUserPoolId,\n      ClientId: environment.cognitoAppClientId\n    });\n    \n    this.initAWSCredentials();\n  }\n\n  private setUser(user: User){\n    this._user = user\n    this._whenLoggedIn.next(user);\n  }\n\n\n  public initAWSCredentials(){\n    let cognitoUser = this.userPool.getCurrentUser();\n    console.log(cognitoUser)\n\n    if(!cognitoUser){\n      return;\n    }\n\n    this.setUser(new User(cognitoUser));\n\n    cognitoUser.getSession(async (err, session: CognitoUserSession) => {\n      if(err){\n        return console.log(err);\n      }\n      let logins = {\n        [environment.cognitoIdentityEndpoint]: session.getIdToken().getJwtToken()\n      };\n  \n      let creds = new CognitoIdentityCredentials({\n        IdentityPoolId: environment.cognitoIdentityPoolId,\n        Logins: logins\n      },{\n        region: environment.region\n      });\n  \n      config.credentials = creds;\n\n      await ((config.credentials) as CognitoIdentityCredentials).refreshPromise();\n    });\n  }\n\n  public checkAWSCredentials(callback: (err?) => void){\n    let cognitoUser = this.userPool.getCurrentUser();\n  \n    if(!cognitoUser){\n      return callback(true);\n    }\n\n    if(((config.credentials) as CognitoIdentityCredentials).needsRefresh()){\n  \n      cognitoUser.getSession((err, session: CognitoUserSession) => {\n        if(err){\n          console.log(err);\n          return callback(err);\n        }\n\n        cognitoUser.refreshSession(session.getRefreshToken(), (err, session: CognitoUserSession) => {\n          if(err){\n            console.log(err);\n            return callback(err);\n          }\n          \n          let logins = {\n            [environment.cognitoIdentityEndpoint]: session.getIdToken().getJwtToken()\n          };\n      \n          let creds = new CognitoIdentityCredentials({\n            IdentityPoolId: environment.cognitoIdentityPoolId,\n            Logins: logins\n          },{\n            region: environment.region\n          });\n      \n          config.credentials = creds;\n    \n          ((config.credentials) as CognitoIdentityCredentials).refresh((err) => {\n            if(err){\n              console.log(err);\n              return callback(err);\n            }\n            callback();\n          });\n        });\n        \n      });\n    } else {\n      callback();\n    }\n  }\n\n  public logout(){\n    let cognitoUser = this.userPool.getCurrentUser();\n    if(cognitoUser){\n      cognitoUser.signOut();\n    }\n\n    // Clear Cognito Cache ID and re-initialize\n    ((config.credentials) as CognitoIdentityCredentials).clearCachedId();\n    let creds = new CognitoIdentityCredentials({\n      IdentityPoolId: environment.cognitoIdentityPoolId\n    },{\n      region: environment.region\n    });      \n    config.credentials = creds;\n    this.setUser(null);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangePasswordChallengeComponent.html":{"url":"components/ChangePasswordChallengeComponent.html","title":"component - ChangePasswordChallengeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChangePasswordChallengeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/change-password-challenge/change-password-challenge.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                esc-change-password-challenge\n            \n\n            \n                styleUrls\n                change-password-challenge.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./change-password-challenge.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                updatePasswordForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/change-password-challenge/change-password-challenge.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/change-password-challenge/change-password-challenge.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/change-password-challenge/change-password-challenge.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        show:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    confirm: false,\n    password: false\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/change-password-challenge/change-password-challenge.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updatePasswordForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        updatePasswordForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/change-password-challenge/change-password-challenge.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { PasswordValidator } from '../../utils/password-validator';\nimport { MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'esc-change-password-challenge',\n  templateUrl: './change-password-challenge.component.html',\n  styleUrls: ['./change-password-challenge.component.scss']\n})\nexport class ChangePasswordChallengeComponent implements OnInit {\n\n  public show: any = {\n    confirm: false,\n    password: false\n  }\n  public updatePasswordForm : FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n  \tpublic dialogRef: MatDialogRef\n  ){ }\n\n  ngOnInit() {\n    this.updatePasswordForm = this.fb.group({\n      password: [null, \n        Validators.compose([\n          Validators.required, \n          Validators.minLength(8), \n          Validators.maxLength(60), \n          Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\^$*.\\[\\]{}()?\\-\\\"!@#%&/\\\\,>\n    \n\n    \n        Update Password\n\n\n\t\n\t\t\n\t\t\t\n        \n          \n          \n          \n          \n\n          \n            New Password is required\n          \n          \n            New Password should be at least 8 characters long\n          \n          \n            New Password should be at most 60 characters long\n          \n          \n            New Password must contain at least 1 lowercase, uppercase, number and a symbol\n          \n          \n            Invalid Password\n          \n        \n\n        \n          \n    \n          \n          \n          \n            Password is required\n          \n          \n            Confirm Password is incorrect\n          \n        \n\n        Update\n\t\t\t\n\t\t\n\t\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Update Password\t\t\t\t\t\t                                                                      New Password is required                                New Password should be at least 8 characters long                                New Password should be at most 60 characters long                                New Password must contain at least 1 lowercase, uppercase, number and a symbol                                Invalid Password                                                                                  Password is required                                Confirm Password is incorrect                          Update\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AccountSettingsComponent', 'selector': 'esc-account-settings'},{'name': 'AppComponent', 'selector': 'esc-root'},{'name': 'ChangePasswordChallengeComponent', 'selector': 'esc-change-password-challenge'},{'name': 'DashboardComponent', 'selector': 'esc-dashboard'},{'name': 'DoctorComponent', 'selector': 'esc-doctor'},{'name': 'LoginComponent', 'selector': 'esc-login'},{'name': 'PageNotFoundComponent', 'selector': 'esc-page-not-found'},{'name': 'PagesComponent', 'selector': 'esc-pages'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangePasswordChallengeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/dashboard/dashboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                esc-dashboard\n            \n\n            \n                styleUrls\n                dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chartData\n                            \n                            \n                                    Public\n                                chartLabels\n                            \n                            \n                                    Public\n                                chartOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                randomize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, helper: HelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/dashboard/dashboard.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helper\n                                                  \n                                                        \n                                                                    HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/dashboard/dashboard.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            randomize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        randomize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/dashboard/dashboard.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chartData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        chartData:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/dashboard/dashboard.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chartLabels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        chartLabels:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/dashboard/dashboard.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chartOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        chartOptions:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    title: {\n      display: true,\n      text: [\n        \"Bitcoin Price Index (USD)\"\n      ]\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      yAxes: [\n          {\n            ticks: {\n              callback: (value) => {\n                return formatCurrency(value, window.navigator.language, '$', 'USD', '1.2-2');\n              }\n            }\n          }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(tooltipItem, data) {\n          return formatCurrency(tooltipItem.yLabel, window.navigator.language, '$', 'USD', '1.2-2');\n        }\n      }\n    }\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/dashboard/dashboard.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { formatCurrency } from '@angular/common'\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\nimport { HttpClient } from '@angular/common/http';\nimport { HelperService } from '../../services';\n\n@Component({\n  selector: 'esc-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  public chartData:Array;\n  public chartLabels:Array;\n  public chartOptions:any = {\n    title: {\n      display: true,\n      text: [\n        \"Bitcoin Price Index (USD)\"\n      ]\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      yAxes: [\n          {\n            ticks: {\n              callback: (value) => {\n                return formatCurrency(value, window.navigator.language, '$', 'USD', '1.2-2');\n              }\n            }\n          }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(tooltipItem, data) {\n          return formatCurrency(tooltipItem.yLabel, window.navigator.language, '$', 'USD', '1.2-2');\n        }\n      }\n    }\n  };\n\n  constructor(\n    private http: HttpClient,\n    private helper: HelperService\n  ) { }\n\n  ngOnInit() {\n    this.http.get(\"https://api.coindesk.com/v1/bpi/historical/close.json\").subscribe((data: any) => {\n      console.log(data);\n      this.chartData = [];\n      this.chartLabels = [];\n      \n      let dataArr = [];\n\n      _.forEach(data.bpi, (value, key) => {\n        dataArr.push(value);\n        this.chartLabels.push(key);\n      });\n\n      console.log(dataArr)\n        \n      this.chartData.push({\n        data: dataArr\n      });\n    })\n  }\n\n \n  public randomize():void {\n    let _chartData:Array = new Array(this.chartData.length);\n    for (let i = 0; i \n    \n\n    \n        \n  \n    {{ 'DASHBOARD' | translate }}\n  \n\n  \n    \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'DASHBOARD\\' | translate }}              '\n    var COMPONENTS = [{'name': 'AccountSettingsComponent', 'selector': 'esc-account-settings'},{'name': 'AppComponent', 'selector': 'esc-root'},{'name': 'ChangePasswordChallengeComponent', 'selector': 'esc-change-password-challenge'},{'name': 'DashboardComponent', 'selector': 'esc-dashboard'},{'name': 'DoctorComponent', 'selector': 'esc-doctor'},{'name': 'LoginComponent', 'selector': 'esc-login'},{'name': 'PageNotFoundComponent', 'selector': 'esc-page-not-found'},{'name': 'PagesComponent', 'selector': 'esc-pages'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DialogService.html":{"url":"injectables/DialogService.html","title":"injectable - DialogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DialogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/dialog/dialog.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                openDialog\n                            \n                            \n                                    Public\n                                openSnackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/dialog/dialog.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            openDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        openDialog(component: , config: MatDialogConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/dialog/dialog.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    MatDialogConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                { width: \"600px\", autoFocus: false }\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     MatDialogRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            openSnackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        openSnackBar(message: string, action?: string, duration: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/dialog/dialog.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        action\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        duration\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                3000\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     MatSnackBarRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarRef, SimpleSnackBar, MatDialogConfig, MatDialogRef, MatDialog } from '@angular/material';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogService {\n\n  constructor(\n  \tprivate dialog: MatDialog,\n    private snackBar: MatSnackBar\n  ) { }\n\n  public openSnackBar(message: string, action?: string, duration: number = 3000): MatSnackBarRef {\n    return this.snackBar.open(message, action, {\n\t\t  duration: duration\n\t\t});\n  }\n\n  public openDialog(component, config: MatDialogConfig = { width: \"600px\", autoFocus: false }): MatDialogRef {\n    let dialogRef: MatDialogRef;\n    dialogRef = this.dialog.open(component, config);\n    return dialogRef;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Doctor.html":{"url":"interfaces/Doctor.html","title":"interface - Doctor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Doctor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/maintenance/doctor/doctor.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        code\n                                \n                                \n                                        first_name\n                                \n                                \n                                        id\n                                \n                                \n                                        last_name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                    \n                                \n                                \n                                    \n                                        first_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                    \n                                \n                                \n                                    \n                                        last_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\n\n@Component({\n  selector: 'esc-doctor',\n  templateUrl: './doctor.component.html',\n  styleUrls: ['./doctor.component.scss']\n})\nexport class DoctorComponent implements OnInit {\n\n  displayedColumns: string[] = ['id', 'code', 'first_name', 'last_name'];\n  dataSource = new MatTableDataSource(DATA);\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor() { }\n\n  ngOnInit() {\n    // this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  sampleClick(row){\n    console.log(row)\n  }\n}\n\nexport interface Doctor {\n  id: number;\n  code: string;\n  first_name: string;\n  last_name: string;\n}\n\nconst DATA: Doctor[] = [\n  {id: 1, code: '1102MD000343', first_name: 'ALEXANDER', last_name: 'ALCANTARA'},\n  {id: 2, code: '1102MD007435', first_name: 'NEIL LEE', last_name: 'AMBASSING'},\n  {id: 3, code: '1102MD035779', first_name: 'GLENN', last_name: 'ANDAL'},\n  {id: 4, code: '1102MD046564', first_name: 'KERWIN', last_name: 'ANG'},\n  {id: 5, code: '1102MD007755', first_name: 'MARITES', last_name: 'APELLANES'},\n  {id: 6, code: '1102MD033959', first_name: 'MARY MARGARET', last_name: 'APOLINAR'},\n  {id: 7, code: '1102MD007800', first_name: 'ANASTACIO', last_name: 'AQUINO'},\n  {id: 8, code: '1102MD000769', first_name: 'LEONIDES', last_name: 'ARCALAS'},\n  {id: 9, code: '1102MD000770', first_name: 'ROSEMARIE', last_name: 'ARCALAS'},\n  {id: 10, code: '1102MD035826', first_name: 'ANNALISA', last_name: 'AROMIN'}\n];\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DoctorComponent.html":{"url":"components/DoctorComponent.html","title":"component - DoctorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DoctorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/maintenance/doctor/doctor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                esc-doctor\n            \n\n            \n                styleUrls\n                doctor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./doctor.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sampleClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/maintenance/doctor/doctor.component.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyFilter(filterValue: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/maintenance/doctor/doctor.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterValue\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/maintenance/doctor/doctor.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sampleClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nsampleClick(row: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/maintenance/doctor/doctor.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataSource:     \n\n                    \n                \n                    \n                        \n                            Default value : new MatTableDataSource(DATA)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/maintenance/doctor/doctor.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayedColumns:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['id', 'code', 'first_name', 'last_name']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/maintenance/doctor/doctor.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paginator:     MatPaginator\n\n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/maintenance/doctor/doctor.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sort:     MatSort\n\n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/maintenance/doctor/doctor.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\n\n@Component({\n  selector: 'esc-doctor',\n  templateUrl: './doctor.component.html',\n  styleUrls: ['./doctor.component.scss']\n})\nexport class DoctorComponent implements OnInit {\n\n  displayedColumns: string[] = ['id', 'code', 'first_name', 'last_name'];\n  dataSource = new MatTableDataSource(DATA);\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor() { }\n\n  ngOnInit() {\n    // this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  sampleClick(row){\n    console.log(row)\n  }\n}\n\nexport interface Doctor {\n  id: number;\n  code: string;\n  first_name: string;\n  last_name: string;\n}\n\nconst DATA: Doctor[] = [\n  {id: 1, code: '1102MD000343', first_name: 'ALEXANDER', last_name: 'ALCANTARA'},\n  {id: 2, code: '1102MD007435', first_name: 'NEIL LEE', last_name: 'AMBASSING'},\n  {id: 3, code: '1102MD035779', first_name: 'GLENN', last_name: 'ANDAL'},\n  {id: 4, code: '1102MD046564', first_name: 'KERWIN', last_name: 'ANG'},\n  {id: 5, code: '1102MD007755', first_name: 'MARITES', last_name: 'APELLANES'},\n  {id: 6, code: '1102MD033959', first_name: 'MARY MARGARET', last_name: 'APOLINAR'},\n  {id: 7, code: '1102MD007800', first_name: 'ANASTACIO', last_name: 'AQUINO'},\n  {id: 8, code: '1102MD000769', first_name: 'LEONIDES', last_name: 'ARCALAS'},\n  {id: 9, code: '1102MD000770', first_name: 'ROSEMARIE', last_name: 'ARCALAS'},\n  {id: 10, code: '1102MD035826', first_name: 'ANNALISA', last_name: 'AROMIN'}\n];\n    \n\n    \n        \n  \n    {{ 'DOCTOR MAINTENANCE' | translate }}\n  \n\n  \n    \n      \n        \n       -->\n      \n        \n           ID \n           {{element.id}} \n        \n\n        \n           Code \n           {{element.code}} \n        \n\n        \n           First Name \n           {{element.first_name}} \n        \n\n        \n           Last Name \n           {{element.last_name}} \n        \n\n        \n        \n      \n\n       -->\n    \n    \n      doctor details\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'DOCTOR MAINTENANCE\\' | translate }}                             -->                         ID            {{element.id}}                            Code            {{element.code}}                            First Name            {{element.first_name}}                            Last Name            {{element.last_name}}                                      -->              doctor details      '\n    var COMPONENTS = [{'name': 'AccountSettingsComponent', 'selector': 'esc-account-settings'},{'name': 'AppComponent', 'selector': 'esc-root'},{'name': 'ChangePasswordChallengeComponent', 'selector': 'esc-change-password-challenge'},{'name': 'DashboardComponent', 'selector': 'esc-dashboard'},{'name': 'DoctorComponent', 'selector': 'esc-doctor'},{'name': 'LoginComponent', 'selector': 'esc-login'},{'name': 'PageNotFoundComponent', 'selector': 'esc-page-not-found'},{'name': 'PagesComponent', 'selector': 'esc-pages'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DoctorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/GuestGuard.html":{"url":"guards/GuestGuard.html","title":"guard - GuestGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    GuestGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/guard/guest.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/guard/guest.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/guard/guest.guard.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../../services';\nimport { take, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GuestGuard implements CanActivate {\n\n\tconstructor(\n    public authService: AuthService, \n    public router: Router\n    ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    \n    let isLoggedIn = this.authService.whenLoggedIn.getValue();\n\n    if (isLoggedIn){\n      this.router.navigate(['/']);\n    }\n\n    return !isLoggedIn;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HelperService.html":{"url":"injectables/HelperService.html","title":"injectable - HelperService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HelperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/helper/helper.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getLocale\n                            \n                            \n                                    Public\n                                initLocale\n                            \n                            \n                                    Public\n                                randomString\n                            \n                            \n                                    Public\n                                updateLocale\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/helper/helper.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLocale\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLocale()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/helper/helper.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initLocale\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initLocale()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/helper/helper.service.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            randomString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        randomString(n: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/helper/helper.service.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        n\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                6\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateLocale\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateLocale(locale: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/helper/helper.service.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        locale\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LANGUAGES, KEY_STORAGE_LANGUAGE, DEFAULT_LANGUAGE } from '../../utils/constant';\nimport * as _ from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HelperService {\n\n  constructor(\n    private translate: TranslateService\n  ) { }\n\n  public initLocale(){\n    let langs = _.map(LANGUAGES, 'value');\n    this.translate.addLangs(langs);\n    \n    this.translate.setDefaultLang(DEFAULT_LANGUAGE);\n\n    let lang;\n    \n    if(localStorage.getItem(KEY_STORAGE_LANGUAGE)){\n      lang = localStorage.getItem(KEY_STORAGE_LANGUAGE);\n    } else {\n      if(_.indexOf(langs, this.translate.getBrowserLang()) >= 0){\n        lang = this.translate.getBrowserLang();\n      } else {\n        lang = DEFAULT_LANGUAGE;\n      }\n      localStorage.setItem(KEY_STORAGE_LANGUAGE, DEFAULT_LANGUAGE);\n    }\n\n    this.translate.use(lang);\n  }\n\n  public getLocale(){\n    return localStorage.getItem(KEY_STORAGE_LANGUAGE);\n  }\n\n  public updateLocale(locale){\n    this.translate.use(locale);\n    localStorage.setItem(KEY_STORAGE_LANGUAGE, locale);\n  }\n\n  public randomString(n: number = 6){\n   return Math.random().toString(36).substring(n);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/http/http.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiEndpoint\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/http/http.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(path: , httpParams?: , additionalHeaders?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/http/http.service.ts:24\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        httpParams\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        additionalHeaders\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiEndpoint\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        apiEndpoint:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.apiEndpoint\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/http/http.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { AuthService } from '..';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { HTTP_HEADER_CONTENT_TYPE, MIME_TYPE_JSON, HTTP_HEADER_AUTHORIZATION } from '../../utils/constant';\nimport { environment } from '../../../environments/environment';\nimport * as _ from 'lodash';\nimport { CognitoUserSession } from 'amazon-cognito-identity-js';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  private apiEndpoint = environment.apiEndpoint;\n  \n\n  constructor(\n    private authService: AuthService,\n    private http: HttpClient,\n  ) { }\n  \n  public get(path, httpParams?, additionalHeaders?): Observable{\n    let result;\n    this.authService.user.cognitoUser.getSession((err, session: CognitoUserSession) => {\n      if(err){\n        return result = of(err);\n      }\n\n      let url = new URL(path, this.apiEndpoint);\n      let headers = _.assign({}, additionalHeaders, { \n        [ HTTP_HEADER_CONTENT_TYPE ]: MIME_TYPE_JSON,\n        [ HTTP_HEADER_AUTHORIZATION ]: session.getIdToken().getJwtToken()\n      });\n\n      return result = this.http.get(url.toString(), {\n        headers: new HttpHeaders(headers),\n        params: httpParams\n      });\n    });\n    return result;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                esc-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isPasswordShown\n                            \n                            \n                                    Public\n                                isSubmitting\n                            \n                            \n                                    Public\n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, route: ActivatedRoute, dialogService: DialogService, router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                    DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isPasswordShown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isPasswordShown:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isSubmitting\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isSubmitting:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from './../../services';\nimport { environment } from './../../../environments/environment';\nimport { AuthenticationDetails, CognitoUser, CognitoUserPool } from 'amazon-cognito-identity-js';\nimport { config, CognitoIdentityCredentials, CognitoIdentityServiceProvider } from 'aws-sdk'\nimport { DialogService } from '../../services/dialog/dialog.service';\nimport { ChangePasswordChallengeComponent } from '../change-password-challenge/change-password-challenge.component';\nimport { COGNITO_ERROR_NOT_AUTHORIZED_EXCEPTION, COGNITO_ERROR_PASSWORDRESET_REQUIRED_EXCEPTION, COGNITO_ERROR_USER_NOT_CONFIRMED_EXCEPTION, COGNITO_ERROR_USER_NOT_FOUND_EXCEPTION } from '../../utils/constant';\n\n@Component({\n  selector: 'esc-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  public isPasswordShown: boolean;\n  public isSubmitting : boolean;\n  public loginForm : FormGroup;\n\n  constructor(\n    private fb: FormBuilder, \n    private route: ActivatedRoute, \n    private dialogService: DialogService,\n    private router: Router, \n    private authService: AuthService\n  ){}\n\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      username: [null, Validators.required],\n      password: [null, Validators.required]\n    });\n\n    this.route.queryParams.subscribe(params => {\n      if(params['username']){\n        this.loginForm.controls['username'].setValue(params['username']);\n      }\n    });\n  }\n\n  onSubmit(value: any){\n \n    this.isSubmitting = true;\n    this.loginForm.disable();\n\n    let authenticationDetails = new AuthenticationDetails({\n      Username: value.username,\n      Password: value.password\n    });\n    \n    let cognitoUser = new CognitoUser({\n      Username : value.username,\n      Pool : this.authService.userPool      \n    });\n    \n    let self = this;\n\n    cognitoUser.authenticateUser(authenticationDetails, {\n      onSuccess: function (session) {\n        self.authService.initAWSCredentials();\n        self.router.navigate(['/']);\n      },\n      onFailure: function (err) {\n        console.log(err);\n        self.isSubmitting = false;\n        self.loginForm.enable();\n\n        switch(err.name){\n          case COGNITO_ERROR_NOT_AUTHORIZED_EXCEPTION:\n          case COGNITO_ERROR_USER_NOT_FOUND_EXCEPTION:\n            self.dialogService.openSnackBar(\"Incorrect Username/Password\");\n            break;\n          case COGNITO_ERROR_PASSWORDRESET_REQUIRED_EXCEPTION:\n            // TODO: SEND_RESET_PASSWORD_REQUIRED\n            // TODO: ERROR_MESSAGE_ABOVE\n            self.dialogService.openSnackBar(\"Password Reset Required. Please check your email for the instruction.\");\n            break;\n          case COGNITO_ERROR_USER_NOT_CONFIRMED_EXCEPTION:\n            // TODO: ERROR_MESSAGE_ABOVE\n            self.dialogService.openSnackBar(\"Please check your email for your account verification\");\n            break;\n          default: \n          // TODO: ERROR_MESSAGE_ABOVE\n            self.dialogService.openSnackBar(\"An error occurred. Please Try Again.\");\n        }\n      },\n      newPasswordRequired: function (userAttributes, requiredAttributes) {\n        self.isSubmitting = false;\n\n        delete userAttributes.phone_number_verified;\n        delete userAttributes.email_verified;\n        self.dialogService.openDialog(ChangePasswordChallengeComponent, { \n            width: \"400px\", \n            autoFocus: true,  \n            disableClose: true, \n            data: {\n              session: this\n            }\n          })\n          .afterClosed()\n          .subscribe((password) => {\n            self.isSubmitting = true;\n            cognitoUser.completeNewPasswordChallenge(password, userAttributes, this);\n          });\n      }\n    })\n  }\n}\n\n    \n\n    \n        \n\n\t\n\n\t\t\n\t\t\t\n\t\t -->\n\n\t  \n\t\t\t\n\t    \n\t      {{ 'MESSAGE_ERROR_USERNAME_REQUIRED' | translate }}\n\t    \n\t\t\n\t\t\n\t  \n\t\t\t\n\t\t\t\n\t\t\t\n\t    \n\t      {{ 'MESSAGE_ERROR_PASSWORD_REQUIRED' | translate }}\n\t    \n\t\t\n\t\t\n\t\t{{ (isSubmitting ? 'LOGGING_IN' : 'LOGIN') | translate }}\n\t\t\n  \t\n\t\t\t{{ 'FORGOT_PASSWORD' | translate }}\n\t\t\t{{ 'REGISTER' | translate }}\n  \t\n  \t\n\t\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\t -->\t  \t\t\t\t    \t      {{ \\'MESSAGE_ERROR_USERNAME_REQUIRED\\' | translate }}\t    \t\t\t\t\t  \t\t\t\t\t\t\t\t\t\t    \t      {{ \\'MESSAGE_ERROR_PASSWORD_REQUIRED\\' | translate }}\t    \t\t\t\t\t\t{{ (isSubmitting ? \\'LOGGING_IN\\' : \\'LOGIN\\') | translate }}\t\t  \t\t\t\t{{ \\'FORGOT_PASSWORD\\' | translate }}\t\t\t{{ \\'REGISTER\\' | translate }}  \t  \t\t'\n    var COMPONENTS = [{'name': 'AccountSettingsComponent', 'selector': 'esc-account-settings'},{'name': 'AppComponent', 'selector': 'esc-root'},{'name': 'ChangePasswordChallengeComponent', 'selector': 'esc-change-password-challenge'},{'name': 'DashboardComponent', 'selector': 'esc-dashboard'},{'name': 'DoctorComponent', 'selector': 'esc-doctor'},{'name': 'LoginComponent', 'selector': 'esc-login'},{'name': 'PageNotFoundComponent', 'selector': 'esc-page-not-found'},{'name': 'PagesComponent', 'selector': 'esc-pages'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaintenanceModule.html":{"url":"modules/MaintenanceModule.html","title":"module - MaintenanceModule","body":"\n                   \n\n\n\n\n  Modules\n  MaintenanceModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MaintenanceModule\n\n\n\ncluster_MaintenanceModule_imports\n\n\n\n\nMaintenanceRoutingModule\n\nMaintenanceRoutingModule\n\n\n\nMaintenanceModule\n\nMaintenanceModule\n\nMaintenanceModule -->\n\nMaintenanceRoutingModule->MaintenanceModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/maintenance/maintenance.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Imports\n                    \n                            \n                                    MaintenanceRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MaintenanceRoutingModule } from './maintenance-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaintenanceRoutingModule\n  ],\n  declarations: []\n})\nexport class MaintenanceModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaintenanceRoutingModule.html":{"url":"modules/MaintenanceRoutingModule.html","title":"module - MaintenanceRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  MaintenanceRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/maintenance/maintenance-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MaintenanceRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/page-not-found/page-not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                esc-page-not-found\n            \n\n            \n                styleUrls\n                page-not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/page-not-found/page-not-found.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goBack\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoBack()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/page-not-found/page-not-found.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/page-not-found/page-not-found.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Location } from \"@angular/common\";\n\n@Component({\n  selector: 'esc-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor(\n    private location: Location, \n  ) { }\n\n  ngOnInit() {\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n}\n\n    \n\n    \n        \n  There's nothing here. &#x1F468;&#x1F3FD;‍&#x1F4BB;\n\n  \n    Go Back\n    Go Home\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  There\\'s nothing here. 👨🏽‍💻      Go Back    Go Home  '\n    var COMPONENTS = [{'name': 'AccountSettingsComponent', 'selector': 'esc-account-settings'},{'name': 'AppComponent', 'selector': 'esc-root'},{'name': 'ChangePasswordChallengeComponent', 'selector': 'esc-change-password-challenge'},{'name': 'DashboardComponent', 'selector': 'esc-dashboard'},{'name': 'DoctorComponent', 'selector': 'esc-doctor'},{'name': 'LoginComponent', 'selector': 'esc-login'},{'name': 'PageNotFoundComponent', 'selector': 'esc-page-not-found'},{'name': 'PagesComponent', 'selector': 'esc-pages'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PagesComponent.html":{"url":"components/PagesComponent.html","title":"component - PagesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PagesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/pages.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                esc-pages\n            \n\n            \n                styleUrls\n                pages.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pages.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                routes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/pages.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/pages.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/pages.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            routes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routes:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/pages.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services';\nimport { Router } from '@angular/router';\nimport { ROUTES } from './pages.routes';\n\n@Component({\n  selector: 'esc-pages',\n  templateUrl: './pages.component.html',\n  styleUrls: ['./pages.component.scss']\n})\nexport class PagesComponent implements OnInit {\n\n  public routes;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.routes = ROUTES;\n  }\n\n  logout(){\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n    \n      \n        \n        {{ route.data?.name | translate }}\n      \n    \n  \n\n  \n    \n      \n        \n      \n      \n        \n           -->\n          Juan Dela Cruz\n          \n        \n\n        \n          \n            \n            {{ 'ACCOUNT_SETTINGS' | translate }}\n          \n          \n            \n            {{ 'LOGOUT' | translate }}\n          \n        \n      \n    \n\n    \n      \n    \n\n    \n      Footer here\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{ route.data?.name | translate }}                                                               -->          Juan Dela Cruz                                                            {{ \\'ACCOUNT_SETTINGS\\' | translate }}                                            {{ \\'LOGOUT\\' | translate }}                                                    Footer here      '\n    var COMPONENTS = [{'name': 'AccountSettingsComponent', 'selector': 'esc-account-settings'},{'name': 'AppComponent', 'selector': 'esc-root'},{'name': 'ChangePasswordChallengeComponent', 'selector': 'esc-change-password-challenge'},{'name': 'DashboardComponent', 'selector': 'esc-dashboard'},{'name': 'DoctorComponent', 'selector': 'esc-doctor'},{'name': 'LoginComponent', 'selector': 'esc-login'},{'name': 'PageNotFoundComponent', 'selector': 'esc-page-not-found'},{'name': 'PagesComponent', 'selector': 'esc-pages'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PagesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PagesModule.html":{"url":"modules/PagesModule.html","title":"module - PagesModule","body":"\n                   \n\n\n\n\n  Modules\n  PagesModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PagesModule\n\n\n\ncluster_PagesModule_declarations\n\n\n\ncluster_PagesModule_imports\n\n\n\n\nAccountSettingsComponent\n\nAccountSettingsComponent\n\n\n\nPagesModule\n\nPagesModule\n\nPagesModule -->\n\nAccountSettingsComponent->PagesModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nPagesModule -->\n\nDashboardComponent->PagesModule\n\n\n\n\n\nDoctorComponent\n\nDoctorComponent\n\nPagesModule -->\n\nDoctorComponent->PagesModule\n\n\n\n\n\nPagesComponent\n\nPagesComponent\n\nPagesModule -->\n\nPagesComponent->PagesModule\n\n\n\n\n\nPagesRoutingModule\n\nPagesRoutingModule\n\nPagesModule -->\n\nPagesRoutingModule->PagesModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/pages.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AccountSettingsComponent\n                            \n                            \n                                DashboardComponent\n                            \n                            \n                                DoctorComponent\n                            \n                            \n                                PagesComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    PagesRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PagesRoutingModule } from './pages-routing.module';\nimport { MatAutocompleteModule, MatButtonModule, MatCardModule, MatCheckboxModule, MatChipsModule, MatDatepickerModule, MatDialogModule, MatFormFieldModule, MatIconModule, MatInputModule, MatListModule, MatMenuModule, MatProgressBarModule, MatProgressSpinnerModule, MatSelectModule, MatSidenavModule, MatSnackBarModule, MatStepperModule, MatTabsModule, MatToolbarModule, MatTooltipModule, MatIconRegistry, MatTableModule } from '@angular/material';\nimport { PagesComponent } from './pages.component';\nimport { RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { DoctorComponent } from './maintenance/doctor/doctor.component';\nimport { MODULES } from '../global-modules';\nimport { AccountSettingsComponent } from './account-settings/account-settings.component';\n\n@NgModule({\n  imports: [\n    PagesRoutingModule,\n    ...MODULES\n  ],\n  declarations: [\n    DashboardComponent,\n    DoctorComponent,\n    PagesComponent,\n    AccountSettingsComponent\n  ]\n})\nexport class PagesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PagesRoutingModule.html":{"url":"modules/PagesRoutingModule.html","title":"module - PagesRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  PagesRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/pages-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PagesComponent } from './pages.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ROUTES, OTHER_ROUTES } from './pages.routes';\n\nconst routes: Routes = [{\n  path: '',\n  component: PagesComponent,\n  children: [\n      {\n          path: '',\n          component: DashboardComponent,\n          data: {\n            icon: \"view-dashboard\",\n            name: \"DASHBOARD\"\n          }\n        },\n      {\n          path: 'maintenance/doctor',\n          component: DoctorComponent,\n          data: {\n            icon: \"view-dashboard\",\n            name: \"DOCTOR MAINTENANCE\"\n          }\n        },\n      {\n          path: 'account-settings',\n          component: AccountSettingsComponent,\n          loadChildren: './account-settings/account-settings.module#AccountSettingsModule'\n        }\n    ]\n}];\n\n@NgModule({\n  imports: [\n  \tRouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class PagesRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordValidator.html":{"url":"classes/PasswordValidator.html","title":"class - PasswordValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/password-validator.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                matchPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            matchPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        matchPassword(AC: AbstractControl)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/password-validator.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        AC\n                                                        \n                                                                    AbstractControl\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl } from '@angular/forms';\n\nexport class PasswordValidator {\n\n  static matchPassword(AC: AbstractControl) {\n   let password = AC.get('password').value; \n   let confirmPassword = AC.get('confirmPassword').value;\n    if(password != confirmPassword) {\n      AC.get('confirmPassword').setErrors({ \n      \tmatchPassword: true \n      });\n    }\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/S3Service.html":{"url":"injectables/S3Service.html","title":"injectable - S3Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  S3Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/s3/s3.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                download\n                            \n                            \n                                    Public\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, helper: HelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/s3/s3.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helper\n                                                  \n                                                        \n                                                                    HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            download\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        download(undefined: literal type, callback: (undefined,data: any) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/s3/s3.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            upload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        upload(undefined: literal type, callback: (undefined,s3Key: any) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/s3/s3.service.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { S3 } from 'aws-sdk';\nimport { saveAs } from 'file-saver';\nimport { DATETIME_FORMAT_FILE_PREFIX_S3 } from '../../utils/constant';\nimport * as moment from 'moment';\nimport * as _ from 'lodash';\nimport { HelperService } from '../helper/helper.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class S3Service {\n\n  constructor(\n    private authService: AuthService,\n    private helper: HelperService\n  ) { }\n\n  public download({ bucketName, key, filename }: {bucketName: string, key: string, filename?: string}, callback: (err?, data?: any) => void){\n    this.authService.checkAWSCredentials( (err) => {\n      if(err){\n        return callback(err);\n      }\n\n      let bucket = new S3();\n\n      let params = {\n        Bucket: bucketName,\n        Key: key,\n      };\n\n      bucket.getObject(params, (err, data) => {\n        if(err){\n          return callback(err);\n        }\n        saveAs(new Blob([data.Body as any], { type: data.ContentType }), filename);\n        callback(null, data);\n      });\n    });\n  }\n\n  public upload(\n      { bucketName, file, options }: {bucketName: string, file: File, options?: S3.ManagedUpload.ManagedUploadOptions}, \n      callback: (err?, s3Key?: any) => void\n    ){\n    this.authService.checkAWSCredentials( (err) => {\n      if(err){\n        return callback(err);\n      }\n\n      let bucket = new S3();\n\n      let extraPrefix = this.helper.randomString(6);\n      let kebabFilename = _.kebabCase(file.name);\n      let now = moment().format(DATETIME_FORMAT_FILE_PREFIX_S3);\n\n      let key = `${extraPrefix}-${now}-${kebabFilename}`;\n\n      let params = {\n        Bucket: bucketName,\n        Key: key, \n        Body: file,\n        ContentType: file.type\n      };\n\n      bucket.upload(params, options, (err) => {\n        if(err){\n          return callback(err);\n        }\n        callback(null, key);\n      });\n    });\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/user.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _cognitoUser\n                            \n                            \n                                    Private\n                                    Optional\n                                _email\n                            \n                            \n                                    Private\n                                _first_name\n                            \n                            \n                                    Private\n                                _last_name\n                            \n                            \n                                    Private\n                                    Optional\n                                _phone_number\n                            \n                            \n                                    Private\n                                    Optional\n                                _username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInitial\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    cognitoUser\n                                \n                                \n                                    first_name\n                                \n                                \n                                    last_name\n                                \n                                \n                                    email\n                                \n                                \n                                    username\n                                \n                                \n                                    phone_number\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cognitoUser: CognitoUser)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/user.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cognitoUser\n                                                  \n                                                        \n                                                                    CognitoUser\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _cognitoUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _cognitoUser:     CognitoUser\n\n                    \n                \n                    \n                        \n                            Type :     CognitoUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/user.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/user.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _first_name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _first_name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/user.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _last_name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _last_name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/user.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _phone_number\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _phone_number:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/user.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _username\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _username:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/user.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getInitial\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetInitial()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/model/user.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        cognitoUser\n                    \n                \n\n                \n                    \n                        getcognitoUser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/user.ts:13\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        first_name\n                    \n                \n\n                \n                    \n                        getfirst_name()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/user.ts:15\n                                \n                            \n\n                \n                    \n                        setfirst_name(first_name: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/user.ts:16\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            first_name\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        last_name\n                    \n                \n\n                \n                    \n                        getlast_name()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/user.ts:18\n                                \n                            \n\n                \n                    \n                        setlast_name(last_name: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/user.ts:19\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            last_name\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/user.ts:21\n                                \n                            \n\n                \n                    \n                        setemail(email: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/user.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            email\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/user.ts:24\n                                \n                            \n\n                \n                    \n                        setusername(username: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/user.ts:25\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            username\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        phone_number\n                    \n                \n\n                \n                    \n                        getphone_number()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/user.ts:27\n                                \n                            \n\n                \n                    \n                        setphone_number(phone_number: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/user.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            phone_number\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport { CognitoUser } from 'amazon-cognito-identity-js';\n\nexport class User {\n  \n  private _cognitoUser: CognitoUser;\n  private _first_name: string;\n  private _last_name: string;\n  private _email?: string;\n  private _username?: string;\n  private _phone_number?: string;\n\n  get cognitoUser(){ return this._cognitoUser };\n\n  get first_name(){ return this._first_name; }\n  set first_name(first_name: string){ this._first_name = first_name };\n\n  get last_name(){ return this._last_name; }\n  set last_name(last_name: string){ this._last_name = last_name };\n\n  get email(){ return this._email; }\n  set email(email: string){ this._email = email };\n\n  get username(){ return this._username; }\n  set username(username: string){ this._username = username };\n\n  get phone_number(){ return this._phone_number; }\n  set phone_number(phone_number: string){ this._phone_number = phone_number };\n\n  constructor(cognitoUser: CognitoUser){\n    this._cognitoUser = cognitoUser;\n  }\n\n  getInitial(){\n    let initial;\n\n    if(this.first_name){\n      initial = this.first_name.substring(0, 1);\n    } else if(this.email){\n      initial = this.email.substring(0, 1);\n    } else if(this.phone_number){\n      initial = this.phone_number.substring(0, 1);\n    }\n\n    return _.toUpper(initial);\n  }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                HttpLoaderFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/change-password-challenge/change-password-challenge.component.ts\n            \n            \n                component\n            \n            \n                ChangePasswordChallengeComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/auth/page-not-found/page-not-found.component.ts\n            \n            \n                component\n            \n            \n                PageNotFoundComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/global-modules.ts\n            \n            \n                variable\n            \n            \n                MODULES\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/user.ts\n            \n            \n                class\n            \n            \n                User\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/pages/account-settings/account-settings.component.ts\n            \n            \n                component\n            \n            \n                AccountSettingsComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/pages/dashboard/dashboard.component.ts\n            \n            \n                component\n            \n            \n                DashboardComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/pages/maintenance/doctor/doctor.component.ts\n            \n            \n                component\n            \n            \n                DoctorComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/pages/maintenance/doctor/doctor.component.ts\n            \n            \n                interface\n            \n            \n                Doctor\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/pages/maintenance/doctor/doctor.component.ts\n            \n            \n                variable\n            \n            \n                DATA\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/pages.component.ts\n            \n            \n                component\n            \n            \n                PagesComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/dialog/dialog.service.ts\n            \n            \n                injectable\n            \n            \n                DialogService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/helper/helper.service.ts\n            \n            \n                injectable\n            \n            \n                HelperService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/http/http.service.ts\n            \n            \n                injectable\n            \n            \n                HttpService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/s3/s3.service.ts\n            \n            \n                injectable\n            \n            \n                S3Service\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/utils/constant/error.ts\n            \n            \n                variable\n            \n            \n                COGNITO_ERROR_NOT_AUTHORIZED_EXCEPTION\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/constant/index.ts\n            \n            \n                variable\n            \n            \n                HTTP_HEADER_CONTENT_TYPE\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/constant/language.ts\n            \n            \n                variable\n            \n            \n                DEFAULT_LANGUAGE\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/constant/language.ts\n            \n            \n                variable\n            \n            \n                KEY_STORAGE_LANGUAGE\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/constant/language.ts\n            \n            \n                variable\n            \n            \n                LANGUAGES\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/password-validator.ts\n            \n            \n                class\n            \n            \n                PasswordValidator\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.6\n        \n            @angular/cdk : ^6.4.6\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/flex-layout : ^6.0.0-beta.17\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/material : ^6.4.6\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            @ng-select/ng-select : ^2.8.0\n        \n            @ngx-translate/core : ^10.0.2\n        \n            @ngx-translate/http-loader : ^3.0.1\n        \n            amazon-cognito-identity-js : ^2.0.23\n        \n            angular-clickable-click : ^0.1.1\n        \n            aws-sdk : ^2.306.0\n        \n            chart.js : ^2.7.2\n        \n            core-js : ^2.5.4\n        \n            file-saver : ^1.3.8\n        \n            hammerjs : ^2.0.8\n        \n            lodash : ^4.17.10\n        \n            ng2-charts : ^1.6.0\n        \n            rxjs : ^6.0.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HttpLoaderFactory   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HttpLoaderFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nHttpLoaderFactory(http: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngularTemplate\nThis project was generated with Angular CLI version 6.1.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccountSettingsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaintenanceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaintenanceRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PagesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_MaintenanceModule\n\n\n\ncluster_MaintenanceModule_imports\n\n\n\ncluster_PagesModule\n\n\n\ncluster_PagesModule_declarations\n\n\n\ncluster_PagesModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangePasswordChallengeComponent\n\nChangePasswordChallengeComponent\n\nAppModule -->\n\nChangePasswordChallengeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaintenanceRoutingModule\n\nMaintenanceRoutingModule\n\n\n\nMaintenanceModule\n\nMaintenanceModule\n\nMaintenanceModule -->\n\nMaintenanceRoutingModule->MaintenanceModule\n\n\n\n\n\nAccountSettingsComponent\n\nAccountSettingsComponent\n\n\n\nPagesModule\n\nPagesModule\n\nPagesModule -->\n\nAccountSettingsComponent->PagesModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nPagesModule -->\n\nDashboardComponent->PagesModule\n\n\n\n\n\nDoctorComponent\n\nDoctorComponent\n\nPagesModule -->\n\nDoctorComponent->PagesModule\n\n\n\n\n\nPagesComponent\n\nPagesComponent\n\nPagesModule -->\n\nPagesComponent->PagesModule\n\n\n\n\n\nPagesRoutingModule\n\nPagesRoutingModule\n\nPagesModule -->\n\nPagesRoutingModule->PagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        11 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            COGNITO_ERROR_NOT_AUTHORIZED_EXCEPTION   (src/.../error.ts)\n                        \n                        \n                            DATA   (src/.../doctor.component.ts)\n                        \n                        \n                            DEFAULT_LANGUAGE   (src/.../language.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            HTTP_HEADER_CONTENT_TYPE   (src/.../index.ts)\n                        \n                        \n                            KEY_STORAGE_LANGUAGE   (src/.../language.ts)\n                        \n                        \n                            LANGUAGES   (src/.../language.ts)\n                        \n                        \n                            MODULES   (src/.../global-modules.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/utils/constant/error.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COGNITO_ERROR_NOT_AUTHORIZED_EXCEPTION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        COGNITO_ERROR_NOT_AUTHORIZED_EXCEPTION:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"NotAuthorizedException\"\n                        \n                    \n\n\n            \n        \n\n    src/app/pages/maintenance/doctor/doctor.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DATA\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DATA:     Doctor[]\n\n                    \n                \n                    \n                        \n                            Type :     Doctor[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {id: 1, code: '1102MD000343', first_name: 'ALEXANDER', last_name: 'ALCANTARA'},\n  {id: 2, code: '1102MD007435', first_name: 'NEIL LEE', last_name: 'AMBASSING'},\n  {id: 3, code: '1102MD035779', first_name: 'GLENN', last_name: 'ANDAL'},\n  {id: 4, code: '1102MD046564', first_name: 'KERWIN', last_name: 'ANG'},\n  {id: 5, code: '1102MD007755', first_name: 'MARITES', last_name: 'APELLANES'},\n  {id: 6, code: '1102MD033959', first_name: 'MARY MARGARET', last_name: 'APOLINAR'},\n  {id: 7, code: '1102MD007800', first_name: 'ANASTACIO', last_name: 'AQUINO'},\n  {id: 8, code: '1102MD000769', first_name: 'LEONIDES', last_name: 'ARCALAS'},\n  {id: 9, code: '1102MD000770', first_name: 'ROSEMARIE', last_name: 'ARCALAS'},\n  {id: 10, code: '1102MD035826', first_name: 'ANNALISA', last_name: 'AROMIN'}\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/utils/constant/language.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_LANGUAGE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_LANGUAGE:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'en'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            KEY_STORAGE_LANGUAGE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        KEY_STORAGE_LANGUAGE:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'language'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LANGUAGES\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LANGUAGES:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  { \n    value: 'en',\n    name: 'English'\n  },\n  { \n    value: 'id',\n    name: 'Indonesia'\n  },\n  { \n    value: 'fil',\n    name: 'Filipino'\n  }\n]\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n\tregion: 'ap-southeast-1',\n  cognitoUserPoolId: 'ap-southeast-1_SKJJOrIzn',\n  cognitoAppClientId: '3l6sa9p2ebk157dge2i4a32gri',\n  cognitoIdentityEndpoint: 'cognito-idp.ap-southeast-1.amazonaws.com/ap-southeast-1_SKJJOrIzn',\n  cognitoIdentityPoolId: 'ap-southeast-1:a4c61255-796b-4096-a20b-4be58aeb4f9a',\n\tapiEndpoint: 'http://localhost:3000',\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n\tregion: 'ap-southeast-1',\n  cognitoUserPoolId: 'ap-southeast-1_SKJJOrIzn',\n  cognitoAppClientId: '3l6sa9p2ebk157dge2i4a32gri',\n  cognitoIdentityEndpoint: 'cognito-idp.ap-southeast-1.amazonaws.com/ap-southeast-1_SKJJOrIzn',\n  cognitoIdentityPoolId: 'ap-southeast-1:a4c61255-796b-4096-a20b-4be58aeb4f9a',\n\tapiEndpoint: 'http://localhost:3000',\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/utils/constant/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HTTP_HEADER_CONTENT_TYPE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        HTTP_HEADER_CONTENT_TYPE:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Content-Type'\n                        \n                    \n\n\n            \n        \n\n    src/app/global-modules.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MODULES\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MODULES:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  CommonModule,\n  FormsModule,\n  ReactiveFormsModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatIconModule,\n  MatButtonModule, \n  MatCardModule,\n  MatMenuModule,\n  MatToolbarModule, \n  MatIconModule,\n  MatSidenavModule,\n  MatListModule,\n  MatTabsModule,\n  FlexLayoutModule,\n  MatTooltipModule,\n  MatDialogModule,\n  MatChipsModule,\n  MatStepperModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatProgressSpinnerModule,\n  MatProgressBarModule,\n  MatCheckboxModule,\n  MatSnackBarModule,\n  MatDatepickerModule,\n  MatSelectModule,\n  MatAutocompleteModule,\n  MatSlideToggleModule,\n  MatTableModule,\n  MatPaginatorModule,\n  MatSortModule,\n  TranslateModule,\n  NgSelectModule,\n  ChartsModule\n]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
